[{"title":"微信聊天记录可视化","path":"/2024/09/26/微信聊天记录可视化/","content":"谨慎食用 数据获取电脑端迁移聊天记录 迁移手机和接收电脑设置在同一局域网内【手机电脑连同一WiFi】 微信-通用-聊天记录-聊天记录迁移与备份-迁移-迁移到电脑【可选迁移全部聊天记录】或【迁移指定聊天记录】 确认电脑端聊天记录是否成功，若成功，手机退出微信运行，重启打开。 下载留痕软件 获取电脑端微信聊天记录 开源软件留痕下载地址，选择对应下载版本。【好像只支持Windows版本，mac系统的姐妹收手吧】 运行文件中的MemoTrace.exe-获取信息-点击解析 等待数据解析完成即可。 点击好友-再点击好友对象，即可获取与好友的聊天信息分析。PS：如果发现信息解析不完全，但确认聊天记录已在电脑端，退出电脑微信重新登录且关闭MemoTrace.exe，重新开启解析即可。 导出数据 程序开源作者已经提供初步的分析,但如果想要更细致更个性化的分析,可导出数据自行分析。点击聊天记录导出-导出CSV，【但导出的csv数据只有聊天文字信息】 导出数据如下图所示： 数据分析准备工作导入第三方库1234567891011121314151617181920212223import pandas as pdimport numpy as npimport matplotlib.pyplot as pltfrom scipy.interpolate import make_interp_splineimport seaborn as snsimport jiebaimport refrom wordcloud import WordCloudfrom collections import Counterimport requestsimport jsonfrom aip import AipNlpfrom snownlp import SnowNLPimport randomimport osfrom datetime import datetimeimport pptxfrom spire.presentation import *from spire.presentation.common import *# 使用SimHei字体支持中文显示plt.rcParams[&#x27;font.sans-serif&#x27;] = [&#x27;KaiTi&#x27;] # 设置默认字体为 KaiTiplt.rcParams[&#x27;axes.unicode_minus&#x27;] = False # 解决负号显示问题 导入数据– 前6个字段数据类型为int64,后面字段数据类型为object。– Type: 发送内容的类型– IsSender: 是否是自己发出的消息，也就是标记消息展示在对话页左边还是右边，取值0或1。– StrContent：信息内容– StrTime: 信息发送时间– Remark: 微信备注– NickName: 微信昵称 12data = pd.read_csv(&#x27;子一.csv&#x27;)data.head() 生成保存图片的文件夹12345# 检查文件夹是否存在,如果文件夹不存在,则创建folder_path = &#x27;图片信息&#x27;if not os.path.exists(folder_path): os.makedirs(folder_path) 图像绘制函数PS：因为下面分析会多次用到下面图像绘制函数,因此先定义图像函数,后面直接调用即可。 获取字典中值最大的数 12345678# 统计谁最多,res字典格式def Get_most_Value(res): res_key = max(res, key=res.get) res_value = res[res_key] return res_key,res_value 获取词频前20个使用频率最高的词汇 123def Get_top20(res): top_20 = dict(sorted(res.items(), key=lambda item: item[1], reverse=True)[:20]) return top_20 绘制词云图函数PS：停用词库需下载且放在与py文件同一路径下。若词云图显示字体报错,可查看系统是否安装simkai.ttf字体。 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152# 绘制词云图def Draw_Yuntu(content,pic_path=None): # 去掉字符串中的所有符号 text = re.sub(r&#x27;[^\\w\\s]&#x27;, &#x27;&#x27;, content.replace(&#x27; &#x27;,&#x27;&#x27;) ) # 使用jieba进行中文分词 words = jieba.cut(text, cut_all=False) # 去掉停用词且去掉单字 ## 读取停用词 with open(&#x27;停用词库.txt&#x27;, encoding=&#x27;utf-8&#x27;) as f: # 可根据需要打开停用词库，然后加上不想显示的词语 con = f.readlines() stop_words = set() # 集合可以去重 for i in con: i = i.replace(&quot; &quot;, &quot; &quot;) # 去掉读取每一行数据的 stop_words.add(i) stop_words # 去掉停用词和单字 words_res = [] for word in words: if word not in stop_words and len(word) != 1: words_res.append(word) # 计算词频 word_list = Counter(words_res) # 生成词云 wordcloud = WordCloud( font_path=&#x27;simkai.ttf&#x27;, # 确保字体路径正确 width=800, height=400, background_color=&#x27;white&#x27; # 图片背景颜色 ).generate_from_frequencies(word_list) # 显示词云图 plt.figure(figsize=(16, 8)) plt.imshow(wordcloud, interpolation=&#x27;bilinear&#x27;) plt.axis(&#x27;off&#x27;) # 关闭坐标轴 # 如果有图片路径传入,则保存图片,反之不保存。 if pic_path: plt.savefig(pic_path, bbox_inches=&#x27;tight&#x27;, pad_inches=0) # 绘制图像 plt.show() return word_list 绘制平滑曲线函数PS：注意pic_path参数，传入路径参数，则保存图片;反之，不保存。 12345678910111213141516171819202122232425262728293031323334353637# 绘制平滑曲线图def Draw_Linegraph(top_20,title_res,pic_path=None): x = list( top_20.keys()) y = list( top_20.values()) x_new = np.linspace(0, len(x) - 1, 300) # 300个点进行插值 spl = make_interp_spline(np.arange(len(x)), y, k=3) # 使用样条插值 y_new = spl(x_new) # 创建折线图 plt.figure(figsize=(20,6)) # 调整图像大小 plt.plot(x_new, y_new, color=&#x27;b&#x27;, label=&#x27;数据线&#x27;, linewidth=2) # 更平滑的曲线 # 添加标题和标签 plt.title(title_res, fontsize=24) plt.xlabel(&#x27;&#x27;) plt.ylabel(&#x27;&#x27;) # 设置横坐标刻度 plt.xticks(ticks=np.arange(len(x)), labels=x, rotation=45, fontsize=12) # 设置X轴的范围，减少标签之间的空隙 plt.xlim(-0.5, len(x) - 0.5) # 调整X轴范围 # 隐藏所有网格线 plt.grid(False) # 关闭网格线 # 显示图形 plt.tight_layout() # 自动调整子图参数，使之填充整个图像区域 # 如果有图片路径传入,则保存图片,反之不保存。 if pic_path: plt.savefig(pic_path) plt.show() 绘制热力图函数PS：注意pic_path参数，传入路径参数，则保存图片;反之，不保存。 1234567891011121314151617181920def Draw_Heatmap(pic_data,pic_path=None): # 绘制热力图 plt.figure(figsize=(20,6)) # 将图像调整为更大的正方形尺寸 sns.heatmap(pic_data, annot=False, cmap=&#x27;YlGnBu&#x27;, cbar=True, square=True, cbar_kws=&#123;&#x27;shrink&#x27;: 0.5&#125;) # 调整颜色条大小，shrink 控制缩小比例 # 设置图表标签 plt.title(&#x27;热力图&#x27;) plt.xlabel(&#x27;&#x27;) plt.ylabel(&#x27;&#x27;) # 如果有图片路径传入,则保存图片,反之不保存。 if pic_path: plt.savefig(pic_path) # 显示图表 plt.show() return None 绘制饼图函数PS：注意pic_path参数，传入路径参数，则保存图片;反之，不保存。 123456789101112131415161718def Draw_Piechart(res,res_title,pic_path=None): labels = res.keys() counts = res.values() # 随机颜色列表 colors = [&quot;darkorange&quot;, &quot;orange&quot;, &quot;navajowhite&quot;, &quot;bisque&quot;, &quot;antiquewhite&quot;, &quot;cornsilk&quot;, &quot;lightyellow&quot;] random.shuffle(colors) plt.title(res_title) plt.pie(counts, labels=labels, colors=colors[:len(labels)], autopct=&#x27;%1.1f%%&#x27;, startangle=140) plt.legend(labels, title=&quot;图例&quot;, loc=&#x27;upper left&#x27;, bbox_to_anchor=(1, 1)) # 如果有图片路径传入,则保存图片,反之不保存。 if pic_path: plt.savefig(pic_path) plt.show() 分析文本情感倾向分析函数– 调用百度云API免费接口进行文本情感分析PS：百度云API需注册验证获取API密钥，可免费调用50万次。注册地址调用返回文本判定信息三种：积极、消极、中性，准确率较高，但调用速度慢,1小时处理1500条左右。 安装百度云API接口包：pip install baidu-aip 123456789101112131415161718def word_mean(text): # 初始化AipNlp对象 APP_ID = &#x27;自己申请注册的APP_ID&#x27; API_KEY = &#x27;自己申请注册的 API_KEY &#x27; SECRET_KEY = &#x27;自己申请注册的SECRET_KEY&#x27; client = AipNlp(APP_ID, API_KEY, SECRET_KEY) &quot;&quot;&quot; 如果有可选参数 &quot;&quot;&quot; options = &#123;&#125; options[&quot;scene&quot;] = &quot;talk&quot; &quot;&quot;&quot; 带参数调用对话情绪识别接口 &quot;&quot;&quot; res = client.emotion(text, options) res = &#123;item[&#x27;label&#x27;]: item[&#x27;prob&#x27;] for item in res[&#x27;items&#x27;]&#125; return res – 使用SnowNLP包 安装第三方库：pip install snownlp 完全免费且速度较快，但准确率不高，且只返回两种类型：积极和消极，可使用自定义词语进行模型训练，提高准确度。 感觉可先调用百度云API获取部分数据的结果并将其喂给SnowNLP，但因为懒没展开这部分，具体可参考CSDN文章。 12345678910# 使用SnowNLP对中文文本进行情感分析def sentiment_analysis(text): s = SnowNLP(text) # SnowNLP的sentiments方法返回情感倾向分数，越接近1表明情感越积极，越接近0表明情感越消极 sentiment_score = s.sentiments return sentiment_score # 返回一个数字 数据总计分析加微信时间123456# strtime数据类型为对象,转换为时间格式data[&#x27;StrTime&#x27;] = pd.to_datetime(data[&#x27;StrTime&#x27;], format=&#x27;%Y-%m-%d %H:%M:%S&#x27;)# 1.第一条聊天的信息，即StrTime最小的数the_first_time = np.min(data[&#x27;StrTime&#x27;])the_first_time 相识多少天12345# 2.距离今天是多少天from datetime import datetimedays_difference = (datetime.today() - the_first_time).daysdays_difference 聊天数123# 3.聊天天数：每天唯一值的计数chat_days = len(np.unique(data[&#x27;StrTime&#x27;].dt.date))chat_days 信息发送数1234567891011121314# 发送总条数data_num = len(data)# 4.总共相互发送信息条数every_chat_num = data.groupby(data[&#x27;IsSender&#x27;])[&#x27;IsSender&#x27;].count()# IsSender等于1,为微信本人；IsSender等于0,为对话者# 在dataframe中随机抽取一条微信本人的信息数据,获取微信本人昵称叫什么NickName_myself = data[data[&#x27;IsSender&#x27;] == 1].sample(n=1).loc[:,&#x27;NickName&#x27;].values[0]NickName_other = data[data[&#x27;IsSender&#x27;] == 0].sample(n=1).loc[:,&#x27;NickName&#x27;].values[0]# 使用字典来重命名索引every_chat_num.index = every_chat_num.index.map(&#123;0: NickName_other, 1: NickName_myself&#125;)every_chat_num 每天聊天情况123456789101112131415161718192021# 5.每天聊天信息heatmap_data = data.groupby([data[&#x27;StrTime&#x27;].dt.isocalendar().week,data[&#x27;StrTime&#x27;].dt.weekday])[&#x27;Sender&#x27;].count().reset_index()heatmap_data = pd.DataFrame(heatmap_data)pivot_table = heatmap_data.pivot(index=&#x27;StrTime&#x27;, columns= &#x27;week&#x27;, values=&#x27;Sender&#x27;)pivot_table = pivot_table.fillna(0).astype(int)pivot_table.index = pivot_table.index.map(&#123; 0: &#x27;星期一&#x27;, 1: &#x27;星期二&#x27;, 2: &#x27;星期三&#x27;, 3: &#x27;星期四&#x27;, 4: &#x27;星期五&#x27;, 5: &#x27;星期六&#x27;, 6: &#x27;星期日&#x27;&#125;)pivot_table# 绘制热力图Draw_Heatmap(pivot_table) 文本分析 文字总数123456# 6.所有文本信息字数all_text = data[data[&#x27;Type&#x27;] == 1][&#x27;StrContent&#x27;].dropna().astype(str).tolist()content = &#x27;&#x27;.join(all_text)total_str_count = len(content)total_str_count 绘制文本信息词云图123456# 绘制词云图content_word_pic_path = os.path.join(folder_path,&#x27;全部聊天词云图.png&#x27;)content_word_list = Draw_Yuntu(content,content_word_pic_path)max_content_word_list_key,max_content_word_list_value = Get_most_Value(content_word_list)max_content_word_list_key,max_content_word_list_value 常用词频统计123456# 最常说的20个词content_word_list_top_20 = Get_top20(content_word_list)content_word_list_top_20# 绘制图像Draw_Linegraph(content_word_list_top_20,&#x27;前20个最常发的词&#x27;) 文本情感分析123456789101112131415161718# 文本情感分析SnowNLP版本,返回一个数res_final = []for i in all_text: try: res_pro = sentiment_analysis(i) if res_pro &gt;= 0.5: res_final.append(&#x27;积极&#x27;) else: res_final.append(&#x27;消极&#x27;) except: pass sentiment_analysis_res = Counter(res_final)sentiment_analysis_resDraw_Piechart(sentiment_analysis_res,&#x27;文本情感倾向分析&#x27;) 详细信息分析聊天最多的一天 获取该天日期1234567# 生成每天聊天信息记录day_chat_counts = data.groupby([data[&#x27;StrTime&#x27;].dt.date])[&#x27;Sender&#x27;].count().to_dict()# 1.聊天最多的一天及该天的信息数max_day_chat_counts_key,max_day_chat_counts_value = Get_most_Value(day_chat_counts)max_day_chat_counts_key,max_day_chat_counts_valuemax_day_chat_day = max_day_chat_counts_key.strftime(&quot;%Y年%m月%d日&quot;) 查看文本内容并绘制云图12345678910# 2.查看聊天最多一天的信息内容# 获取聊天最多一天的数据max_day_chat_df = data[data[&#x27;StrTime&#x27;].dt.date == max_day_chat_counts_key]# 获取文本信息作词频分析max_day_chat_content = &#x27;&#x27;.join(max_day_chat_df[max_day_chat_df[&#x27;Type&#x27;] == 1][&#x27;StrContent&#x27;].dropna().astype(str).tolist())# 绘制词云图max_day_chat_pic_path = os.path.join(folder_path,&#x27;最多聊天词云图.png&#x27;)max_day_chat_word_list = Draw_Yuntu(max_day_chat_content,max_day_chat_pic_path) 词频统计并绘制平滑曲线图1234567max_day_chat_word_list_key,max_day_chat_word_list_value = Get_most_Value(max_day_chat_word_list)max_day_chat_word_list_key,max_day_chat_word_list_valuemax_day_chat_word_list_top_20 = Get_top20(max_day_chat_word_list)max_day_chat_word_list_top_20Draw_Linegraph(max_day_chat_word_list_top_20,&#x27;前20个最常发的词&#x27;) 各自发送的信息分析 自己发送的信息分析1234567891011121314# 获取自己发送的数据data_myself = data[data[&#x27;IsSender&#x27;] == 1]# 获取文本信息作词频分析data_myself_chat_content = &#x27;&#x27;.join(data_myself[data_myself[&#x27;Type&#x27;] == 1][&#x27;StrContent&#x27;].dropna().astype(str).tolist())# 绘制词云图data_myself_chat_word_list = Draw_Yuntu(data_myself_chat_content)# 获取前20个最常说的词汇data_myself_chat_word_list_top_20 = Get_top20(data_myself_chat_word_list)data_myself_chat_word_list_top_20Draw_Linegraph(data_myself_chat_word_list_top_20,&#x27;前20个最常发的词&#x27;) 对面发送的信息分析123456789101112131415# 获取对面发送的数据data_other = data[data[&#x27;IsSender&#x27;] == 0]# 获取文本信息作词频分析data_other_chat_content = &#x27;&#x27;.join(data_other[data_other[&#x27;Type&#x27;] == 1][&#x27;StrContent&#x27;].dropna().astype(str).tolist())# 绘制词云图data_other_chat_word_list = Draw_Yuntu(data_other_chat_content)# 获取前20个最常说的词汇data_other_chat_word_list_top_20 = Get_top20(data_other_chat_word_list)data_other_chat_word_list_top_20Draw_Linegraph(data_other_chat_word_list_top_20,&#x27;前20个最常发的词&#x27;) 最常聊天时段1234567891011121314# 聊天时段划分def get_active_time(x): start_hour = (x.time().hour // 2) * 2 end_hour = start_hour + 2 return f&quot;&#123;start_hour:02&#125;:00 - &#123;end_hour:02&#125;:00&quot; data[&#x27;active_time&#x27;] = list(map(lambda x : get_active_time(x), data[&#x27;StrTime&#x27;]))time_counts = Counter(data[&#x27;active_time&#x27;])most_common_time = time_counts.most_common(1)[0] # 返回计数前面1个最多的结果，结果为元组,2就是返回前面最多的2个most_common_time[0]# 绘制聊条时间断的图active_time_pic_path = os.path.join(folder_path,&#x27;活跃时间图.png&#x27;)Draw_Linegraph(dict(sorted(time_counts.items())),&#x27;聊天时段汇总统计&#x27;,active_time_pic_path) 每周聊天情况分析1234567891011121314151617181920212223242526# 统计每周聊天情况week_chat_counts = data.groupby([data[&#x27;StrTime&#x27;].dt.weekday])[&#x27;Sender&#x27;].count()week_chat_counts = pd.DataFrame(week_chat_counts).reset_index()# 将星期几映射为名称week_chat_counts[&#x27;StrTime&#x27;] = week_chat_counts[&#x27;StrTime&#x27;].map(&#123; 0: &#x27;周一&#x27;, 1: &#x27;周二&#x27;, 2: &#x27;周三&#x27;, 3: &#x27;周四&#x27;, 4: &#x27;周五&#x27;, 5: &#x27;周六&#x27;, 6: &#x27;周日&#x27;&#125;)week_chat_counts[&#x27;weight&#x27;] = week_chat_counts[&#x27;Sender&#x27;] / week_chat_counts[&#x27;Sender&#x27;].sum()week_chat_countstop_two = week_chat_counts.nlargest(2, &#x27;weight&#x27;)top_strtime = top_two[&#x27;StrTime&#x27;].tolist()# 绘制饼图week_chat_counts_dict = dict(zip(week_chat_counts[&#x27;StrTime&#x27;],week_chat_counts[&#x27;weight&#x27;]))week_chat_pic_path = os.path.join(folder_path,&#x27;聊天星期图.png&#x27;)Draw_Piechart(week_chat_counts_dict,&#x27;各星期聊天占比&#x27;,week_chat_pic_path) 自动生成PPT&amp;PDF报告可以直接利用数据生成HTML文档,但是因为不太会HTML，遂弃。原本还想着用Python连接H5，自动化生成H5，发现也不太可行。最后选择制作一份相对固定的PPT模板，利用Python对PPT内容进行修改，最后生成PDF文档。 自动化生成PPT报告 准备一个可视化PPT模板，对需要更新文字图片的对象类型重新命名，方便后续Python一对一输入修改。【形状格式-选择窗口-修改对应的对象】 因为菜，所以暂时无法解决微信头像自动下载的问题，需要提前将俩人的微信头像放入“图片信息”文件夹【若不需要微信头像,replace_pic直接删除前2个元素】 用spire.presentation这个库转换PDF，图片清晰度会损失，但是用Win32一直报错。12345678910111213141516171819202122# 键是文本框名字,值是该文本框输入内容replace_content = &#123; &#x27;自己微信昵称&#x27;: NickName_myself, &#x27;对面微信昵称&#x27;: NickName_other, &#x27;第一次见面时间&#x27;: the_first_time.date(), &#x27;相识天数&#x27;: days_difference, &#x27;地球圈数&#x27;: round(days_difference * 5 * 24 / 40076, 1), &#x27;发送信息数&#x27;: data_num, &#x27;文本总数&#x27;: total_str_count, &#x27;最常发送词&#x27;: max_content_word_list_key, &#x27;词频数&#x27;: max_content_word_list_value, &#x27;聊天最多一天&#x27;: max_day_chat_day, &#x27;聊天最多一天信息数&#x27;: max_day_chat_counts_value, &#x27;活跃时间段&#x27;: most_common_time[0], &#x27;最多星期&#x27;: top_strtime[0], &#x27;次多星期&#x27;: top_strtime[1]&#125;# 需要更新图片的位置replace_pic = [&#x27;自己头像&#x27;, &#x27;他人头像&#x27;, &#x27;全部聊天词云图&#x27;, &#x27;最多聊天词云图&#x27;, &#x27;活跃时间图&#x27;, &#x27;聊天星期图&#x27;] PPT文档转PDF文档 若PPT文档中存在特殊字体，PPT文档需将文字嵌入文档，否则转换成PDF文字格式会出错。","tags":["Python","有意思的项目"],"categories":["Python","有意思的项目"]},{"title":"Hexo+Nodejs+GitHub创建个人博客","path":"/2024/09/08/Nodejs安装教程/","content":"小白科学食用指南 Nodejs安装教程安装包下载 在Nodejs官方网址下载安装包,选择Windows64位版本。 安装nodejs D盘创建名为nodejs的空文件夹（用于存放nodejs安装文件） 双击msi安装包,点击Next开始安装;自定义修改nodejs的安装路径,将其放在刚刚创建的nodejs空文件夹;然后一路Next,最后Finish。 验证nodejs是否安装成功,若出现下图结果,即为安装成功。 12node -v // 显示nodejs安装版本npm -v // 显示npm版本 配置环境变量 若没有配置环境,后续可能会运行报错,所以要配置环境变量。 点击电脑设置-系统-系统信息-高级系统设置-环境变量-系统变量-Path-编辑-新建【增添以下四条环境变量信息】-最后确定,即可完成nodejs的配置。1234D: odejs ode_cacheD: odejs ode_cache ode_modulesD: odejs ode_modules pmD: odejs ode_modules pm\\bin 搭建Hexo主题创建并初始化主题文件夹 以管理员身份打开cmd,转入D盘,在D盘初始化名为blog的文件夹(名字可随意,但是一定要转入D盘,要不然东西都会装在C盘)12d:hexo init blog 安装npm 继续cd命令进入blog文件夹,安装npm12cd blognpm install 生成hexo文件 初始化hexo主题,最后复制cmd窗口出现的网址url到浏览器打开即可。123hexo c // 清楚缓存hexo g // 生成文件hexo s //启动服务 PS:后续所有插件的安装都要以管理员的身份运行cmd,不然会报错;或者修改blog文件夹的读写权限。 将原始hexo主题替换stellar主题下载stellar主题 以管理员身份打开cmd,进入到blog文件夹,输入以下命令下载stellar主题,下载好的主题文件会被放在文件夹node_modules1npm i hexo-theme-stellar 修改_config.yml文件替换主题 将_config.yml中theme: landscape修改为theme: stellar,重新生成文件即可成功替换 将Hexo文件部署到GitHub创建GitHub公开仓库 登录 GitHub,新建一个Repository,Repository name要是“用户名.github.io” 仓库主页,复制仓库链接 修改_config.yml文件,安装Git插件 修改_config.yml文件1234deploy: type: git repository: https://github.com/Ashelyjiang/Ashelyjiang.github.io.git // github仓库地址 branch: main 安装Git插件1npm install hexo-deployer-git --save 上传文件 以管理员身份打开,三部曲将文件上传到github123hexo chexo ghexo d //部署主题 获取网址 打开个人仓库,点击Settings-Pages即可获取网址","tags":["Hexo"],"categories":["Hexo"]},{"title":"Hexo装修日记","path":"/2024/09/08/hexo装修日记/","content":"Stellar主题最全配置信息可参考开源作者Xaoxuu 一键配置 因为我是直接用npm方式加载主题,所以我的Stellar主题源文件内容都在文件夹node_modules里。 直接在myblog文件夹里新创建一个命名为_config.stellar.yml的文件,这个文件中的配置信息优先级高于主题文件夹中的配置文件。 然后将&#x2F;node_modules&#x2F;hexo-theme-stellar&#x2F;_config.yml的内容复制粘贴到刚刚创建的_config.stellar.yml，再作对应修改即可。 字体修改效果展示部署程序 _config.yml文件的最后一行引入字体文件123inject: head: - &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.staticfile.org/lxgw-wenkai-screen-webfont/1.6.0/lxgwwenkaiscreen.css&quot;&gt;在 _config.stellar.yml 中找到 style.font-family,修改增加字体\"LXGW WenKai Screen\"1234style: font-family: logo: &#x27;&quot;LXGW WenKai Screen&quot;,system-ui, &quot;Microsoft Yahei&quot;, &quot;Segoe UI&quot;, -apple-system, Roboto, Ubuntu, &quot;Helvetica Neue&quot;, Arial, &quot;WenQuanYi Micro Hei&quot;, sans-serif&#x27; body: &#x27;&quot;LXGW WenKai Screen&quot;,system-ui, &quot;Microsoft Yahei&quot;, &quot;Segoe UI&quot;, -apple-system, Roboto, Ubuntu, &quot;Helvetica Neue&quot;, Arial, &quot;WenQuanYi Micro Hei&quot;, sans-serif&#x27; 添加网站运行时间效果展示部署程序 在 _config.stellar.yml 中找到footer的content处,将此处代码修改为如下样式1234567891011121314151617181920212223242526272829303132333435footer: content: | # 支持 Markdown 格式 &lt;center&gt; &lt;span&gt; © 2024 &lt;a style=&quot;font-weight: bold; auto;&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot; href=&quot;https://github.com/Ashelyjiang&quot;&gt;AquaMind&lt;/a&gt; 使用 &lt;a style=&quot;font-weight: bold; auto;&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot; href=&quot;https://github.com/FelicxFoster/hexo-theme-stellar&quot;&gt;Stellar&lt;/a&gt; 创建 &lt;/span&gt; &lt;br&gt; &lt;span id=&quot;runtime_span&quot;&gt;&lt;/span&gt; &lt;script type=&quot;text/javascript&quot;&gt; function show_runtime() &#123; window.setTimeout(show_runtime, 1000); var X = new Date(&quot;9/2/2024 00:00:00&quot;); var Y = new Date(); var T = (Y.getTime() - X.getTime()); var M = 24 * 60 * 60 * 1000; var a = T / M; var diffDays = Math.floor(a); var b = (a - diffDays) * 24; var diffHours = Math.floor(b); var c = (b - diffHours) * 60; var diffMinutes = Math.floor(c); var diffSeconds = Math.floor((c - diffMinutes) * 60); document.getElementById(&quot;runtime_span&quot;).innerHTML = &quot;🦉已经开业：&quot; + diffDays + &quot; 天 &quot; + diffHours + &quot; 小时 &quot; + diffMinutes + &quot; 分钟 &quot; + diffSeconds + &quot; 秒🦉&quot;; &#125; show_runtime(); &lt;/script&gt; &lt;br&gt; &lt;script async src=&quot;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;&lt;/script&gt; &lt;span id=&quot;busuanzi_container_site_uv&quot;&gt; 本小破站已经有&lt;span id=&quot;busuanzi_value_site_uv&quot;&gt;&lt;/span&gt;人光顾过🥂 &lt;/span&gt; &lt;/center&gt; 使用fontawesome动态图标效果展示部署程序 _config.yml文件的引入使图标跳动的文件123inject: head: - &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css&quot;&gt; # 动态图标在 _config.stellar.yml 中footer栏处配置动态图标, 图标在 FontAwesome 网站, 点击图标名字就是 HTML 格式 class 里面的内容 + fa-bounce123456footer: social: github: icon: &#x27;&lt;i class=&quot;fa-solid fa-github fa-brands fa-bounce&quot;&gt;&lt;/i&gt;&#x27; title: &#x27;github&#x27; url: / 网页泡泡点击效果效果展示部署程序 在/node_modules/hexo-theme-stellar/source/js/services文件夹下新创建firework.js文件.文件是根据CSDN上单个爱心代码让Chat老师加工生成,谨慎食用。123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110!function (window, document) &#123; // 初始化函数，设置样式并启动动画 function init() &#123; // 添加CSS样式 addStyles(` .spark &#123; position: fixed; border-radius: 50%; pointer-events: none; transition: all 1s ease-out; z-index: 99999; &#125; `); // 绑定点击事件 bindClickEvent(); // 启动动画 animate(); &#125; // 添加CSS样式到页面 function addStyles(styles) &#123; var styleElement = document.createElement(&quot;style&quot;); styleElement.type = &quot;text/css&quot;; try &#123; styleElement.appendChild(document.createTextNode(styles)); &#125; catch (e) &#123; styleElement.styleSheet.cssText = styles; &#125; document.head.appendChild(styleElement); &#125; // 绑定点击事件 function bindClickEvent() &#123; window.addEventListener(&#x27;click&#x27;, function (event) &#123; createSparks(event); &#125;); &#125; // 创建多个火花元素 function createSparks(event) &#123; var numberOfSparks = 30; // 火花数量 for (var i = 0; i &lt; numberOfSparks; i++) &#123; var sparkElement = document.createElement(&quot;div&quot;); sparkElement.className = &quot;spark&quot;; var angle = Math.random() * 2 * Math.PI; // 随机角度 var speed = Math.random() * 150 + 50; // 随机速度 sparks.push(&#123; el: sparkElement, x: event.clientX, y: event.clientY, dx: Math.cos(angle) * speed, // 水平速度 dy: Math.sin(angle) * speed, // 垂直速度 alpha: 1, scale: Math.random() * 1.5 + 0.5, // 随机缩放 color: getRandomPinkColor() // 统一为粉色系颜色 &#125;); document.body.appendChild(sparkElement); &#125; &#125; // 获取粉色系随机颜色 function getRandomPinkColor() &#123; var r = 255; var g = Math.floor(Math.random() * 156 + 100); // 绿色值在100到255之间 var b = Math.floor(Math.random() * 255); // 蓝色值在0到255之间 return `rgb($&#123;r&#125;,$&#123;g&#125;,$&#123;b&#125;)`; &#125; // 动画函数 function animate() &#123; for (var i = 0; i &lt; sparks.length; i++) &#123; var spark = sparks[i]; if (spark.alpha &lt;= 0) &#123; document.body.removeChild(spark.el); sparks.splice(i, 1); i--; &#125; else &#123; spark.x += spark.dx * 0.05; // 控制水平运动速度 spark.y += spark.dy * 0.05; // 控制垂直运动速度 spark.alpha -= 0.02; // 增加透明度减少速度 spark.el.style.cssText = ` left:$&#123;spark.x&#125;px; top:$&#123;spark.y&#125;px; opacity:$&#123;spark.alpha&#125;; background:$&#123;spark.color&#125;; width:$&#123;10 * spark.scale&#125;px; height:$&#123;10 * spark.scale&#125;px; z-index:99999; `; &#125; &#125; requestAnimationFrame(animate); &#125; // 兼容不同浏览器的 requestAnimationFrame window.requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) &#123; setTimeout(callback, 1000 / 60); &#125;; var sparks = []; // 存储所有火花元素 // 等待 DOM 加载完成后再初始化 document.addEventListener(&#x27;DOMContentLoaded&#x27;, init);&#125;(window, document);_config.yml文件的引入网页泡泡点击效果js文件123inject: head: - &lt;script async data-pjax src=&quot;/js/services/firework.js&quot;&gt;&lt;/script&gt; # 泡泡效果 欢迎信息设置效果展示部署程序 首先在腾讯位置服务注册帐号申请一个KEY,注册流程详细可参考大佬教程PS:注意要在配额管理-账户额度-IP定位处,分配对应的配额,不然无法调用API返回定位信息。在/node_modules/hexo-theme-stellar/source/js/services文件夹下新创建txmap.js文件,并替换成自己的APIKEY。代码参考大佬教程,但样式我稍作了修改。123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231//get请求$.ajax(&#123; type: &#x27;get&#x27;, url: &#x27;https://apis.map.qq.com/ws/location/v1/ip&#x27;, data: &#123; key: &#x27;自己的APIKEY&#x27;, output: &#x27;jsonp&#x27;, &#125;, dataType: &#x27;jsonp&#x27;, success: function (res) &#123; ipLoacation = res; &#125;&#125;)function getDistance(e1, n1, e2, n2) &#123; const R = 6371 const &#123; sin, cos, asin, PI, hypot &#125; = Math let getPoint = (e, n) =&gt; &#123; e *= PI / 180 n *= PI / 180 return &#123; x: cos(n) * cos(e), y: cos(n) * sin(e), z: sin(n) &#125; &#125; let a = getPoint(e1, n1) let b = getPoint(e2, n2) let c = hypot(a.x - b.x, a.y - b.y, a.z - b.z) let r = asin(c / 2) * 2 * R return Math.round(r);&#125;function showWelcome() &#123; let dist = getDistance(113.34499552, 23.15537143, ipLoacation.result.location.lng, ipLoacation.result.location.lat); //这里换成自己的经纬度 let pos = ipLoacation.result.ad_info.nation; let ip; let posdesc; //根据国家、省份、城市信息自定义欢迎语 switch (ipLoacation.result.ad_info.nation) &#123; case &quot;日本&quot;: posdesc = &quot;よろしく，一起去看樱花吗&quot;; break; case &quot;美国&quot;: posdesc = &quot;Let us live in peace!&quot;; break; case &quot;英国&quot;: posdesc = &quot;想同你一起夜乘伦敦眼&quot;; break; case &quot;俄罗斯&quot;: posdesc = &quot;干了这瓶伏特加！&quot;; break; case &quot;法国&quot;: posdesc = &quot;C&#x27;est La Vie&quot;; break; case &quot;德国&quot;: posdesc = &quot;Die Zeit verging im Fluge.&quot;; break; case &quot;澳大利亚&quot;: posdesc = &quot;一起去大堡礁吧！&quot;; break; case &quot;加拿大&quot;: posdesc = &quot;拾起一片枫叶赠予你&quot;; break; case &quot;中国&quot;: pos = ipLoacation.result.ad_info.province + &quot; &quot; + ipLoacation.result.ad_info.city + &quot; &quot; + ipLoacation.result.ad_info.district; ip = ipLoacation.result.ip; switch (ipLoacation.result.ad_info.province) &#123; case &quot;北京市&quot;: posdesc = &quot;北——京——欢迎你~~~&quot;; break; case &quot;天津市&quot;: posdesc = &quot;讲段相声吧。&quot;; break; case &quot;河北省&quot;: posdesc = &quot;山势巍巍成壁垒，天下雄关。铁马金戈由此向，无限江山。&quot;; break; case &quot;山西省&quot;: posdesc = &quot;展开坐具长三尺，已占山河五百余。&quot;; break; case &quot;内蒙古自治区&quot;: posdesc = &quot;天苍苍，野茫茫，风吹草低见牛羊。&quot;; break; case &quot;辽宁省&quot;: posdesc = &quot;我想吃烤鸡架！&quot;; break; case &quot;吉林省&quot;: posdesc = &quot;状元阁就是东北烧烤之王。&quot;; break; case &quot;黑龙江省&quot;: posdesc = &quot;很喜欢哈尔滨大剧院。&quot;; break; case &quot;上海市&quot;: posdesc = &quot;众所周知，中国只有两个城市。&quot;; break; case &quot;江苏省&quot;: switch (ipLoacation.result.ad_info.city) &#123; case &quot;南京市&quot;: posdesc = &quot;这是我挺想去的城市啦。&quot;; break; case &quot;苏州市&quot;: posdesc = &quot;上有天堂，下有苏杭。&quot;; break; default: posdesc = &quot;散装是必须要散装的。&quot;; break; &#125; break; case &quot;浙江省&quot;: posdesc = &quot;东风渐绿西湖柳，雁已还人未南归。&quot;; break; case &quot;河南省&quot;: switch (ipLoacation.result.ad_info.city) &#123; case &quot;郑州市&quot;: posdesc = &quot;豫州之域，天地之中。&quot;; break; case &quot;南阳市&quot;: posdesc = &quot;臣本布衣，躬耕于南阳。此南阳非彼南阳！&quot;; break; case &quot;驻马店市&quot;: posdesc = &quot;峰峰有奇石，石石挟仙气。嵖岈山的花很美哦！&quot;; break; case &quot;开封市&quot;: posdesc = &quot;刚正不阿包青天。&quot;; break; case &quot;洛阳市&quot;: posdesc = &quot;洛阳牡丹甲天下。&quot;; break; default: posdesc = &quot;可否带我品尝河南烩面啦？&quot;; break; &#125; break; case &quot;安徽省&quot;: posdesc = &quot;蚌埠住了，芜湖起飞。&quot;; break; case &quot;福建省&quot;: posdesc = &quot;井邑白云间，岩城远带山。&quot;; break; case &quot;江西省&quot;: posdesc = &quot;落霞与孤鹜齐飞，秋水共长天一色。&quot;; break; case &quot;山东省&quot;: posdesc = &quot;遥望齐州九点烟，一泓海水杯中泻。&quot;; break; case &quot;湖北省&quot;: posdesc = &quot;来碗热干面！&quot;; break; case &quot;湖南省&quot;: posdesc = &quot;74751，长沙斯塔克。&quot;; break; case &quot;广东省&quot;: posdesc = &quot;老板来两斤福建人。&quot;; break; case &quot;广西壮族自治区&quot;: posdesc = &quot;桂林山水甲天下。&quot;; break; case &quot;海南省&quot;: posdesc = &quot;朝观日出逐白浪，夕看云起收霞光。&quot;; break; case &quot;四川省&quot;: posdesc = &quot;康康川妹子。&quot;; break; case &quot;贵州省&quot;: posdesc = &quot;茅台，学生，再塞200。&quot;; break; case &quot;云南省&quot;: posdesc = &quot;玉龙飞舞云缠绕，万仞冰川直耸天。&quot;; break; case &quot;西藏自治区&quot;: posdesc = &quot;躺在茫茫草原上，仰望蓝天。&quot;; break; case &quot;陕西省&quot;: posdesc = &quot;来份臊子面加馍。&quot;; break; case &quot;甘肃省&quot;: posdesc = &quot;羌笛何须怨杨柳，春风不度玉门关。&quot;; break; case &quot;青海省&quot;: posdesc = &quot;牛肉干和老酸奶都好好吃。&quot;; break; case &quot;宁夏回族自治区&quot;: posdesc = &quot;大漠孤烟直，长河落日圆。&quot;; break; case &quot;新疆维吾尔自治区&quot;: posdesc = &quot;驼铃古道丝绸路，胡马犹闻唐汉风。&quot;; break; case &quot;台湾省&quot;: posdesc = &quot;我在这头，大陆在那头。&quot;; break; case &quot;香港特别行政区&quot;: posdesc = &quot;永定贼有残留地鬼嚎，迎击光非岁玉。&quot;; break; case &quot;澳门特别行政区&quot;: posdesc = &quot;性感荷官，在线发牌。&quot;; break; default: posdesc = &quot;带我去你的城市逛逛吧！&quot;; break; &#125; break; default: posdesc = &quot;带我去你的国家逛逛吧。&quot;; break; &#125; //根据本地时间切换欢迎语 let timeChange; let date = new Date(); if (date.getHours() &gt;= 5 &amp;&amp; date.getHours() &lt; 11) timeChange = &quot;&lt;span&gt;上午好&lt;/span&gt;，一日之计在于晨！&quot;; else if (date.getHours() &gt;= 11 &amp;&amp; date.getHours() &lt; 13) timeChange = &quot;&lt;span&gt;中午好&lt;/span&gt;，该摸鱼吃午饭了。&quot;; else if (date.getHours() &gt;= 13 &amp;&amp; date.getHours() &lt; 15) timeChange = &quot;&lt;span&gt;下午好&lt;/span&gt;，懒懒地睡个午觉吧！&quot;; else if (date.getHours() &gt;= 15 &amp;&amp; date.getHours() &lt; 16) timeChange = &quot;&lt;span&gt;三点几啦&lt;/span&gt;，一起饮茶呀！&quot;; else if (date.getHours() &gt;= 16 &amp;&amp; date.getHours() &lt; 19) timeChange = &quot;&lt;span&gt;夕阳无限好！&lt;/span&gt;&quot;; else if (date.getHours() &gt;= 19 &amp;&amp; date.getHours() &lt; 24) timeChange = &quot;&lt;span&gt;晚上好&lt;/span&gt;，夜生活嗨起来！&quot;; else timeChange = &quot;夜深了，早点休息，少熬夜。&quot;;try &#123; // 自定义文本和需要放的位置 document.getElementById(&quot;welcome-info&quot;).innerHTML = `&lt;b&gt; &lt;center style=&quot;font-family: &#x27;LXGW WenKai Screen&#x27;, sans-serif; font-size: 1.2em;&quot;&gt;🎉 来自站长的问候 🎉&lt;/center&gt; &amp;emsp;&amp;emsp;欢迎来自 &lt;span style=&quot;font-size: 1.6em; font-weight: bold; font-family: &#x27;KaiTi&#x27;, &#x27;SimKai&#x27;, &#x27;楷体&#x27;, serif; color: #FFA500;&quot;&gt;$&#123;pos&#125;&lt;/span&gt; 的小伙伴， $&#123;timeChange&#125;您现在距离我约 &lt;span style=&quot;font-size: 1.6em; font-weight: bold; font-family: &#x27;KaiTi&#x27;, &#x27;SimKai&#x27;, &#x27;楷体&#x27;, serif; color: #FFA500;&quot;&gt;$&#123;dist&#125;&lt;/span&gt; 公里， &lt;span style=&quot;font-family: &#x27;LXGW WenKai Screen&#x27;, sans-serif;&quot;&gt;$&#123;posdesc&#125;&lt;/span&gt; &lt;/b&gt;`;&#125; catch (err) &#123; // console.log(&quot;Pjax无法获取#welcome-info元素🙄🙄🙄&quot;)&#125;&#125;window.onload = showWelcome;// 如果使用了pjax在加上下面这行代码document.addEventListener(&#x27;pjax:complete&#x27;, showWelcome);在_config.yml文件的引入两个依赖文件1234inject: head: - &lt;script src=&quot;https://cdn.staticfile.org/jquery/3.6.3/jquery.min.js&quot;&gt;&lt;/script&gt; # jQuery - &lt;script async data-pjax src=&quot;/js/services/txmap.js&quot;&gt;&lt;/script&gt; # 腾讯位置API在/node_modules/hexo-theme-stellar/_data/widgets.yml文件添加下面的内容;并在 _config.stellar.yml 中home:rightbar: welcomeloc使组件显示。1234567891011welcomeloc: layout: markdown title: &#x27;🎉 网络一线牵 珍惜这段缘&#x27; linklist: columns: 1 items: - icon: &#x27;&lt;img src=&quot;https://api.iconify.design/ion:dice-outline.svg&quot;/&gt;&#x27; title: 随机文章 url: &#x27;javascript:toRandomPost()&#x27; content: | &lt;span id=&quot;welcome-info&quot; style=&quot;font-family: &#x27;LXGW WenKai Screen&#x27;, sans-serif;&quot;&gt;&lt;/span&gt; 添加地图标注效果展示部署程序 安装Hexo-tag-map插件1npm i hexo-tag-map安装好插件后即可使用,具体使用方法参考大佬教程,但因为原本插件只允许标记一个地点,在Chat老师的帮助下,修改了部分代码使其支持多个地点标注。找到/node_modules/hexo-tag-map/index.js文件,将文件代码替换为下面的代码。123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313314315316317318319320321322323324325326327328329330331332333334335336337338339340341342343344345346347348349350351352353354355356357358359360361362363364365366367368369370371372373374375376377378379380381382383384385386387388389390391392393394395396397398399400401402403404405406407408409410411412413414415416417418419420421422423424425426427428429430431432433434435436437438439440441442443444445446447448449450451452453454455456457458459460461462463464465466467468469470471472473474475476477478479480481482483484485486487488489490491492493494495496497498499500501502503504505506507508509510511512513514515516517518519520521522523524525526527528529530531532533534535536537538539540541542// A map plug-in under hexo, which supports rendering of beautiful interactive maps on article pages.// * author: guole// * https://guole.fun/// * license: Apache-2.0// * https://guole.fun/posts/41887//blob/main/LICENSE// &#123;% map altLan, altLat, alt, zoom, mapWidth, mapHeight, tuceng %&#125;// &#123;% map 经度, 纬度, 文本, 缩放级别, 宽, 高, 图层 %&#125;// 一个例子：&#123;% map 114.533983, 22.569441,这里是西涌沙滩, 14, 100%, 360px, 1 %&#125;// 一个例子：&#123;% map %&#125;// 使用说明：https://guole.fun/posts/41887/&#x27;use strict&#x27;;// 地图所需的 CSS 和 JS 资源const css_text = `&lt;link rel=&quot;stylesheet&quot; href=&quot;//unpkg.com/hexo-tag-map/lib/leaflet@1.7.1.css&quot;&gt;`;const js_text = `&lt;script data-pjax src=&quot;//unpkg.com/hexo-tag-map/lib/leaflet@1.7.1.js&quot;&gt;&lt;/script&gt;`;const ChineseTmsProviders = `&lt;script data-pjax src=&quot;//unpkg.com/hexo-tag-map/lib/leaflet.ChineseTmsProviders@1.0.4.js&quot;&gt;&lt;/script&gt;`;const proj4 = `&lt;script data-pjax src=&quot;//unpkg.com/hexo-tag-map/lib/proj4@2.4.3.js&quot;&gt;&lt;/script&gt;`;const proj4leaflet = `&lt;script data-pjax src=&quot;//unpkg.com/hexo-tag-map/lib/proj4leaflet@1.0.1.min.js&quot;&gt;&lt;/script&gt;`;let gaode_txt = &quot;高德地图&quot;;// 处理地图的核心函数function hunhe(args) &#123; // 解析参数, args 是传入的参数数组 let params = args.join(&#x27; &#x27;).split(&#x27;;&#x27;); // 参数使用分号分割，用于支持多个标记点 let mapConfig = params.shift().split(&#x27;,&#x27;); // 提取地图配置参数，移除第一个（主配置） // 提取地图配置的宽度、高度、缩放级别、中心经度和纬度 let mapWidth = mapConfig[0] || &#x27;100%&#x27;; let mapHeight = mapConfig[1] || &#x27;360px&#x27;; let zoom = mapConfig[2] || 5; // 默认为 5 级缩放 let centerLan = mapConfig[3] || 104.195397; // 默认为中国中心经度 let centerLat = mapConfig[4] || 35.86166; // 默认为中国中心纬度 // 创建返回的 HTML 和 JavaScript 代码字符串 let result = &#x27;&#x27;; let mapid = &#x27;map-china&#x27;; // 给地图一个唯一的 id // 插入样式和必要的 JS 资源 result += css_text; result += js_text; result += ChineseTmsProviders; // 创建地图容器 result += `&lt;div class=&quot;map-box&quot; style=&quot;margin: 0.8rem 0 1.6rem 0;&quot;&gt; &lt;div id=&quot;$&#123;mapid&#125;&quot; style=&quot;max-width:$&#123;mapWidth&#125;; height:$&#123;mapHeight&#125;; display: block; margin:0 auto; z-index:1; border-radius: 5px;&quot;&gt;&lt;/div&gt; &lt;/div&gt;`; // 初始化地图的 JS 脚本 result += `&lt;script type=&quot;text/javascript&quot;&gt; var normalm = L.tileLayer.chinaProvider(&#x27;GaoDe.Normal.Map&#x27;, &#123;maxZoom: 20, minZoom: 1, attribution: &#x27;$&#123;gaode_txt&#125;&#x27;&#125;); var mymap = L.map(&#x27;$&#123;mapid&#125;&#x27;, &#123;center: [$&#123;centerLat&#125;, $&#123;centerLan&#125;], zoom: $&#123;zoom&#125;, layers: [normalm], zoomControl: false&#125;); `; // 处理每个标记点，遍历 `params` 中的每一项 params.forEach(point =&gt; &#123; let pointArgs = point.split(&#x27;,&#x27;); // 标记点参数依然用逗号分割 if (pointArgs.length &gt;= 3) &#123; let altLan = pointArgs[0].trim(); // 经度 let altLat = pointArgs[1].trim(); // 纬度 let alt = pointArgs[2].trim(); // 文本 // 添加标记点到地图上 result += `var marker = L.marker([$&#123;altLat&#125;, $&#123;altLan&#125;]).addTo(mymap); marker.bindPopup(&quot;$&#123;alt&#125;&quot;).openPopup();`; &#125; &#125;); // 添加缩放控制到地图上 result += &quot;L.control.zoom(&#123;zoomInTitle: &#x27;放大&#x27;, zoomOutTitle: &#x27;缩小&#x27;&#125;).addTo(mymap);&lt;/script&gt;&quot;; return result; // 返回生成的 HTML 和 JS 代码&#125;// 注册 Hexo 标签, 当用户在 Markdown 中使用 `&#123;% map %&#125;` 时调用 hunhe 函数hexo.extend.tag.register(&#x27;map&#x27;, hunhe);hexo.extend.tag.register(&#x27;Map&#x27;, hunhe);function gaode(args)&#123; args = args.join(&#x27; &#x27;).split(&#x27;,&#x27;); let mapWidth = &#x27;100%&#x27;; let mapHeight = &#x27;360px&#x27;; let zoom = 14; let alt = &#x27;&#x27;; let altLan = 117.086471; let altLat = 36.264217; if (args.length == 1) &#123; alt = &#x27;这里是东岳泰山，海拔1532.7米！&#x27;; &#125; else if (args.length == 2) &#123; altLan = args[0].trim(); altLat = args[1].trim(); &#125; else if (args.length == 3) &#123; altLan = args[0].trim(); altLat = args[1].trim(); alt = args[2].trim(); &#125; else if (args.length == 4) &#123; altLan = args[0].trim(); altLat = args[1].trim(); alt = args[2].trim(); zoom = args[3].trim(); &#125; else if (args.length == 5) &#123; altLan = args[0].trim(); altLat = args[1].trim(); alt = args[2].trim(); zoom = args[3].trim(); mapWidth = args[4].trim(); &#125; else if (args.length == 6 || args.length == 7) &#123; altLan = args[0].trim(); altLat = args[1].trim(); alt = args[2].trim(); zoom = args[3].trim(); mapWidth = args[4].trim(); mapHeight = args[5].trim(); &#125; else if (args.length &gt; 7 ) &#123; console.error(&#x27;&gt;&gt;&gt;&gt;&gt;&gt;&gt;gaodeMap标签错误：标签内参数不正确，请查看文档：https://guole.fun/posts/41887/&#x27;); throw new Error(&#x27;标签内参数不正确,请查看文档：https://guole.fun/posts/41887/&#x27;); &#125; let n = /^(\\-|\\+)?\\d+(\\.\\d+)?$/; //匹配正负数，包含正负浮点数 let r = /^\\+?[1-9][0-9]*$/; //匹配正整数 if (n.test(altLan) &amp;&amp; n.test(altLat) &amp;&amp; altLan &lt;= 180 &amp;&amp; altLan &gt;= -180 &amp;&amp; altLat &lt;= 90 &amp;&amp; altLat &gt;= -90 ) &#123; if (r.test(zoom)) &#123; &#125; else &#123; console.error(&#x27;&gt;&gt;&gt;&gt;&gt;&gt;&gt;gaodeMap标签错误：标签内经纬度或缩放等级值不正确。经度(-180~180),纬度(-90~90),缩放等级(3~18),文档：https://guole.fun/posts/41887/&#x27;); throw new Error(&#x27;标签内经纬度或缩放等级值不正确，文档：https://guole.fun/posts/41887/&#x27;); &#125; &#125; else &#123; console.error(&#x27;&gt;&gt;&gt;&gt;&gt;&gt;&gt;gaodeMap标签错误：标签内经纬度或缩放等级值不正确。经度(-180~180),纬度(-90~90),缩放等级(3~18),文档：https://guole.fun/posts/41887/&#x27;); throw new Error(&#x27;标签内经纬度或缩放等级值不正确，请查看文档：https://guole.fun/posts/41887/&#x27;); &#125; if (args.length &gt;= 4) &#123; if (zoom &lt; 3 || zoom &gt; 18 ) &#123; console.error(&#x27;&gt;&gt;&gt;&gt;&gt;&gt;&gt;gaodeMap标签错误：标签内缩放等级超出范围(3~18)，请查看文档：https://guole.fun/posts/41887/&#x27;); throw new Error(&#x27;标签内缩放等级超出范围(3~18)，请查看文档：https://guole.fun/posts/41887/&#x27;); &#125; else &#123;&#125; &#125; else &#123;&#125; let mapid = &#x27;gaodeMap-&#x27; + altLan + &#x27;-&#x27; + altLat; let result = &#x27;&#x27;; result += css_text; result += js_text; result += ChineseTmsProviders; result += &#x27;&lt;div class=&quot;map-box&quot; style=&quot;margin: 0.8rem 0 1.6rem 0;&quot;&gt;&#x27;; result += &#x27;&lt;div id=&quot;&#x27; + mapid + &#x27;&quot;&#x27; + &#x27; style=&quot;max-width:&#x27; + mapWidth + &#x27;; height:&#x27; + mapHeight + &#x27;;display: block;margin:0 auto;z-index:1;border-radius: 5px;&quot;&gt;&lt;/div&gt;&#x27;; result += &#x27;&lt;/div&gt;&#x27;; result += &#x27;&lt;script type=&quot;text/javascript&quot;&gt;&#x27;; result += &quot;var normalm=L.tileLayer.chinaProvider(&#x27;GaoDe.Normal.Map&#x27;,&#123;maxZoom:20,minZoom:1,attribution:&#x27;&quot; + gaode_txt + &quot;&#x27;&#125;);&quot;; result += &quot;var imgm=L.tileLayer.chinaProvider(&#x27;GaoDe.Satellite.Map&#x27;,&#123;maxZoom:20,minZoom:1,attribution:&#x27;&quot; + gaode_txt + &quot;&#x27;&#125;);&quot;; result += &quot;var imga=L.tileLayer.chinaProvider(&#x27;GaoDe.Satellite.Annotion&#x27;,&#123;maxZoom:20,minZoom:1,attribution:&#x27;&quot; + gaode_txt + &quot;&#x27;&#125;);&quot;; result += &#x27;var normal=L.layerGroup([normalm]),image=L.layerGroup([imgm,imga]);&#x27;; result += &#x27;var baseLayers=&#123;&quot;高德地图&quot;:normal,&quot;高德卫星地图&quot;:imgm,&quot;高德卫星标注&quot;:image&#125;;&#x27;; if (args.length == 7) &#123; if (args[6].trim() == 2) &#123; result += &quot;var mymap=L.map(&#x27;&quot; + mapid + &quot;&#x27;,&#123;center:[&quot; + altLat + &quot;,&quot; + altLan + &quot;],zoom:&quot; + zoom + &quot;,layers:[imgm],zoomControl:false&#125;);&quot;; &#125; else if (args[6].trim() == 3) &#123; result += &quot;var mymap=L.map(&#x27;&quot; + mapid + &quot;&#x27;,&#123;center:[&quot; + altLat + &quot;,&quot; + altLan + &quot;],zoom:&quot; + zoom + &quot;,layers:[image],zoomControl:false&#125;);&quot;; &#125; else &#123; result += &quot;var mymap=L.map(&#x27;&quot; + mapid + &quot;&#x27;,&#123;center:[&quot; + altLat + &quot;,&quot; + altLan + &quot;],zoom:&quot; + zoom + &quot;,layers:[normal],zoomControl:false&#125;);&quot;; &#125; &#125; else &#123; result += &quot;var mymap=L.map(&#x27;&quot; + mapid + &quot;&#x27;,&#123;center:[&quot; + altLat + &quot;,&quot; + altLan + &quot;],zoom:&quot; + zoom + &quot;,layers:[normal],zoomControl:false&#125;);&quot;; &#125; result += &quot;L.control.layers(baseLayers,null).addTo(mymap);L.control.zoom(&#123;zoomInTitle:&#x27;放大&#x27;,zoomOutTitle:&#x27;缩小&#x27;&#125;).addTo(mymap);&quot;; if (args.length == 2) &#123; result += &#x27;&lt;/script&gt;&#x27;; return result; &#125; else &#123; result += &quot;var marker = L.marker([&#x27;&quot; + altLat + &quot;&#x27;,&#x27;&quot; + altLan + &quot;&#x27;]).addTo(mymap);&quot;; result += &#x27;marker.bindPopup(&quot;&#x27; + alt + &#x27;&quot;).openPopup();&#x27;; result += &#x27;&lt;/script&gt;&#x27;; return result; &#125;&#125;;hexo.extend.tag.register(&#x27;gaodeMap&#x27;, gaode);hexo.extend.tag.register(&#x27;GaodeMap&#x27;, gaode);hexo.extend.tag.register(&#x27;Amap&#x27;, gaode);hexo.extend.tag.register(&#x27;amap&#x27;, gaode);function openstreet(args)&#123; args = args.join(&#x27; &#x27;).split(&#x27;,&#x27;); let mapWidth = &#x27;100%&#x27;; let mapHeight = &#x27;360px&#x27;; let zoom = 14; let alt = &#x27;&#x27;; let altLan = 113.892994; let altLat = 22.55025; if (args.length == 1) &#123; alt = &#x27;这里是深圳欢乐港湾！&#x27;; &#125; else if (args.length == 2) &#123; altLan = args[0].trim(); altLat = args[1].trim(); &#125; else if (args.length == 3) &#123; altLan = args[0].trim(); altLat = args[1].trim(); alt = args[2].trim(); &#125; else if (args.length == 4) &#123; altLan = args[0].trim(); altLat = args[1].trim(); alt = args[2].trim(); zoom = args[3].trim(); &#125; else if (args.length == 5) &#123; altLan = args[0].trim(); altLat = args[1].trim(); alt = args[2].trim(); zoom = args[3].trim(); mapWidth = args[4].trim(); &#125; else if (args.length == 6) &#123; altLan = args[0].trim(); altLat = args[1].trim(); alt = args[2].trim(); zoom = args[3].trim(); mapWidth = args[4].trim(); mapHeight = args[5].trim(); &#125; else if (args.length &gt; 6 ) &#123; console.error(&#x27;&gt;&gt;&gt;&gt;&gt;&gt;&gt;openstreetMap标签错误：标签内参数不正确,请查看文档：https://guole.fun/posts/41887/&#x27;); throw new Error(&#x27;标签内参数不正确,请查看文档：https://guole.fun/posts/41887/&#x27;); &#125; let n = /^(\\-|\\+)?\\d+(\\.\\d+)?$/; //匹配正负数，包含正负浮点数 let r = /^\\+?[1-9][0-9]*$/; //匹配正整数 if (n.test(altLan) &amp;&amp; n.test(altLat) &amp;&amp; altLan &lt;= 180 &amp;&amp; altLan &gt;= -180 &amp;&amp; altLat &lt;= 90 &amp;&amp; altLat &gt;= -90 ) &#123; if (r.test(zoom)) &#123; &#125; else &#123; console.error(&#x27;&gt;&gt;&gt;&gt;&gt;&gt;&gt;openstreetMap标签错误：标签内经纬度或缩放等级值不正确。经度(-180~180),纬度(-90~90),缩放等级(1~18),文档：https://guole.fun/posts/41887/&#x27;); throw new Error(&#x27;标签内经纬度或缩放等级值不正确，请查看文档：https://guole.fun/posts/41887/&#x27;); &#125; &#125; else &#123; console.error(&#x27;&gt;&gt;&gt;&gt;&gt;&gt;&gt;openstreetMap标签错误：标签内经纬度或缩放等级值不正确。经度(-180~180),纬度(-90~90),缩放等级(1~18),文档：https://guole.fun/posts/41887/&#x27;); throw new Error(&#x27;标签内经纬度或缩放等级值不正确，请查看文档：https://guole.fun/posts/41887/&#x27;); &#125; if (args.length &gt;= 4) &#123; if (zoom &lt; 1 || zoom &gt; 18 ) &#123; console.error(&#x27;&gt;&gt;&gt;&gt;&gt;&gt;&gt;openstreetMap标签错误：标签内缩放等级超出范围(1~18)，请查看文档：https://guole.fun/posts/41887/&#x27;); throw new Error(&#x27;标签内缩放等级超出范围(1~18)，请查看文档：https://guole.fun/posts/41887/&#x27;); &#125; else &#123;&#125; &#125; else &#123;&#125; let mapid = &#x27;openstreetMap-&#x27; + altLan + &#x27;-&#x27; + altLat; let result = &#x27;&#x27;; result += css_text; result += js_text; result += &#x27;&lt;div class=&quot;map-box&quot; style=&quot;margin: 0.8rem 0 1.6rem 0;&quot;&gt;&#x27;; result += &#x27;&lt;div id=&quot;&#x27; + mapid + &#x27;&quot;&#x27; + &#x27; style=&quot;max-width:&#x27; + mapWidth + &#x27;; height:&#x27; + mapHeight + &#x27;;display: block;margin:0 auto;z-index:1;border-radius: 5px;&quot;&gt;&lt;/div&gt;&#x27;; result += &#x27;&lt;/div&gt;&#x27;; result += &#x27;&lt;script&gt;&#x27;; result += &quot;var mymap = L.map(&#x27;&quot; + mapid + &quot;&#x27;, &#123; attributionControl:false &#125;).setView([&#x27;&quot; + altLat + &quot;&#x27;,&#x27;&quot; + altLan + &quot;&#x27;],&quot; + zoom + &quot;);&quot;; result += &quot;L.tileLayer(&#x27;http://&#123;s&#125;.tile.openstreetmap.org/&#123;z&#125;/&#123;x&#125;/&#123;y&#125;.png&#x27;, &#123;&#125;).addTo(mymap);&quot;; result += &quot;var marker = L.marker([&#x27;&quot; + altLat + &quot;&#x27;,&#x27;&quot; + altLan + &quot;&#x27;]).addTo(mymap);&quot;; if (args.length == 2) &#123; result += &#x27;&lt;/script&gt;&#x27;; return result; &#125; else &#123; result += &#x27;marker.bindPopup(&quot;&#x27; + alt + &#x27;&quot;).openPopup();&#x27;; result += &#x27;&lt;/script&gt;&#x27;; return result; &#125;&#125;;hexo.extend.tag.register(&#x27;openstreetMap&#x27;, openstreet);hexo.extend.tag.register(&#x27;OpenStreetMap&#x27;, openstreet);function baidu(args)&#123; args = args.join(&#x27; &#x27;).split(&#x27;,&#x27;); let mapWidth = &#x27;100%&#x27;; let mapHeight = &#x27;360px&#x27;; let zoom = 14; let alt = &#x27;&#x27;; let altLan = 110.073028; let altLat = 34.497647; if (args.length == 1) &#123; alt = &#x27;这里是西岳华山，海拔2154.9米！&#x27;; &#125; else if (args.length == 2) &#123; altLan = args[0].trim(); altLat = args[1].trim(); &#125; else if (args.length == 3) &#123; altLan = args[0].trim(); altLat = args[1].trim(); alt = args[2].trim(); &#125; else if (args.length == 4) &#123; altLan = args[0].trim(); altLat = args[1].trim(); alt = args[2].trim(); zoom = args[3].trim(); &#125; else if (args.length == 5) &#123; altLan = args[0].trim(); altLat = args[1].trim(); alt = args[2].trim(); zoom = args[3].trim(); mapWidth = args[4].trim(); &#125; else if (args.length == 6 || args.length == 7) &#123; altLan = args[0].trim(); altLat = args[1].trim(); alt = args[2].trim(); zoom = args[3].trim(); mapWidth = args[4].trim(); mapHeight = args[5].trim(); &#125; else if (args.length &gt; 7 ) &#123; console.error(&#x27;&gt;&gt;&gt;&gt;&gt;&gt;&gt;baiduMap标签错误：标签内参数不正确，请查看文档：https://guole.fun/posts/41887/&#x27;); throw new Error(&#x27;标签内参数不正确,请查看文档：https://guole.fun/posts/41887/&#x27;); &#125; let n = /^(\\-|\\+)?\\d+(\\.\\d+)?$/; //匹配正负数，包含正负浮点数 let r = /^\\+?[1-9][0-9]*$/; //匹配正整数 if (n.test(altLan) &amp;&amp; n.test(altLat) &amp;&amp; altLan &lt;= 180 &amp;&amp; altLan &gt;= -180 &amp;&amp; altLat &lt;= 90 &amp;&amp; altLat &gt;= -90 ) &#123; if (r.test(zoom)) &#123; &#125; else &#123; console.error(&#x27;&gt;&gt;&gt;&gt;&gt;&gt;&gt;baiduMap标签错误：标签内经纬度或缩放等级值不正确。经度(-180~180),纬度(-90~90),缩放等级(4~18),文档：https://guole.fun/posts/41887/&#x27;); throw new Error(&#x27;标签内经纬度或缩放等级值不正确，请查看文档：https://guole.fun/posts/41887/&#x27;); &#125; &#125; else &#123; console.error(&#x27;&gt;&gt;&gt;&gt;&gt;&gt;&gt;baiduMap标签错误：标签内经纬度或缩放等级值不正确。经度(-180~180),纬度(-90~90),缩放等级(4~18),文档：https://guole.fun/posts/41887/&#x27;); throw new Error(&#x27;标签内经纬度或缩放等级值不正确，请查看文档：https://guole.fun/posts/41887/&#x27;); &#125; if (args.length &gt;= 4) &#123; if (zoom &lt; 4 || zoom &gt; 18 ) &#123; console.error(&#x27;&gt;&gt;&gt;&gt;&gt;&gt;&gt;baiduMap标签错误：标签内缩放等级超出范围(4~18)，请查看文档：https://guole.fun/posts/41887/&#x27;); throw new Error(&#x27;标签内缩放等级超出范围(4~18)，请查看文档：https://guole.fun/posts/41887/&#x27;); &#125; else &#123;&#125; &#125; else &#123;&#125; let mapid = &#x27;baiduMap-&#x27; + altLan + &#x27;-&#x27; + altLat; let result = &#x27;&#x27;; result += css_text; result += js_text; result += proj4; result += proj4leaflet; result += ChineseTmsProviders; result += &#x27;&lt;div id=&quot;&#x27; + mapid + &#x27;&quot;&#x27; + &#x27; style=&quot;max-width:&#x27; + mapWidth + &#x27;; height:&#x27; + mapHeight + &#x27;;display: block;margin:0 auto;z-index:1;border-radius: 5px;&quot;&gt;&lt;/div&gt;&#x27;; result += &#x27;&lt;script type=&quot;text/javascript&quot;&gt;&#x27;; result += &quot;var normalMap=L.tileLayer.chinaProvider(&#x27;Baidu.Normal.Map&#x27;,&#123;maxZoom:20,minZoom:4,attribution:&#x27;&quot; + baidu_txt + &quot;&#x27;&#125;),satelliteMap=L.tileLayer.chinaProvider(&#x27;Baidu.Satellite.Map&#x27;,&#123;maxZoom:18,minZoom:1,attribution:&#x27;&quot; + baidu_txt + &quot;&#x27;&#125;),annotionMap=L.tileLayer.chinaProvider(&#x27;Baidu.Satellite.Annotion&#x27;,&#123;maxZoom:18,minZoom:1,attribution:&#x27;&quot; + baidu_txt + &quot;&#x27;&#125;);&quot;; result += &#x27;var imageMap=L.layerGroup([satelliteMap,annotionMap]);&#x27;; result += &#x27;var baseLayers=&#123;&quot;百度地图&quot;:normalMap,&quot;百度卫星图&quot;:satelliteMap,&quot;百度卫星标注&quot;:imageMap&#125;;&#x27;; if (args.length == 7) &#123; if (args[6].trim() == 2) &#123; result += &#x27;var mymap=L.map(&quot;&#x27; + mapid + &#x27;&quot;,&#123;crs:L.CRS.Baidu,minZoom:2,maxZoom:20,attributionControl:true,center:[&#x27; + altLat + &#x27;,&#x27; + altLan + &#x27;],zoom:&#x27; + zoom + &#x27;,layers:[satelliteMap],zoomControl:false&#125;);&#x27;; &#125; else &#123; result += &#x27;var mymap=L.map(&quot;&#x27; + mapid + &#x27;&quot;,&#123;crs:L.CRS.Baidu,minZoom:2,maxZoom:20,attributionControl:true,center:[&#x27; + altLat + &#x27;,&#x27; + altLan + &#x27;],zoom:&#x27; + zoom + &#x27;,layers:[normalMap],zoomControl:false&#125;);&#x27;; &#125; &#125; else &#123; result += &#x27;var mymap=L.map(&quot;&#x27; + mapid + &#x27;&quot;,&#123;crs:L.CRS.Baidu,minZoom:2,maxZoom:20,attributionControl:true,center:[&#x27; + altLat + &#x27;,&#x27; + altLan + &#x27;],zoom:&#x27; + zoom + &#x27;,layers:[normalMap],zoomControl:false&#125;);&#x27;; &#125; result += &quot;L.control.layers(baseLayers,overlayLayers).addTo(mymap);L.control.zoom(&#123;zoomInTitle:&#x27;放大&#x27;,zoomOutTitle:&#x27;缩小&#x27;&#125;).addTo(mymap);&quot;; if (args.length == 2) &#123; result += &#x27;&lt;/script&gt;&#x27;; return result; &#125; else &#123; result += &quot;var marker = L.marker([&#x27;&quot; + altLat + &quot;&#x27;,&#x27;&quot; + altLan + &quot;&#x27;]).addTo(mymap);&quot;; result += &#x27;marker.bindPopup(&quot;&#x27; + alt + &#x27;&quot;).openPopup();&#x27;; result += &#x27;&lt;/script&gt;&#x27;; return result; &#125;&#125;;hexo.extend.tag.register(&#x27;baiduMap&#x27;, baidu);hexo.extend.tag.register(&#x27;BaiduMap&#x27;, baidu);function geoq(args)&#123; args = args.join(&#x27; &#x27;).split(&#x27;,&#x27;); let mapWidth = &#x27;100%&#x27;; let mapHeight = &#x27;360px&#x27;; let zoom = 14; let alt = &#x27;&#x27;; let altLan = 114.058975; let altLat = 22.543754; if (args.length == 1) &#123; alt = &#x27;这里是中国深圳！&#x27;; &#125; else if (args.length == 2) &#123; altLan = args[0].trim(); altLat = args[1].trim(); &#125; else if (args.length == 3) &#123; altLan = args[0].trim(); altLat = args[1].trim(); alt = args[2].trim(); &#125; else if (args.length == 4) &#123; altLan = args[0].trim(); altLat = args[1].trim(); alt = args[2].trim(); zoom = args[3].trim(); &#125; else if (args.length == 5) &#123; altLan = args[0].trim(); altLat = args[1].trim(); alt = args[2].trim(); zoom = args[3].trim(); mapWidth = args[4].trim(); &#125; else if (args.length == 6 || args.length == 7) &#123; altLan = args[0].trim(); altLat = args[1].trim(); alt = args[2].trim(); zoom = args[3].trim(); mapWidth = args[4].trim(); mapHeight = args[5].trim(); &#125; else if (args.length &gt; 7 ) &#123; console.error(&#x27;&gt;&gt;&gt;&gt;&gt;&gt;&gt;geoqMap标签错误：标签内参数不正确，请查看文档：https://guole.fun/posts/41887/&#x27;); throw new Error(&#x27;标签内参数不正确,请查看文档：https://guole.fun/posts/41887/&#x27;); &#125; let n = /^(\\-|\\+)?\\d+(\\.\\d+)?$/; //匹配正负数，包含正负浮点数 let r = /^\\+?[1-9][0-9]*$/; //匹配正整数 if (n.test(altLan) &amp;&amp; n.test(altLat) &amp;&amp; altLan &lt;= 180 &amp;&amp; altLan &gt;= -180 &amp;&amp; altLat &lt;= 90 &amp;&amp; altLat &gt;= -90 ) &#123; if (r.test(zoom)) &#123; &#125; else &#123; console.error(&#x27;&gt;&gt;&gt;&gt;&gt;&gt;&gt;geoqMap标签错误：标签内经纬度或缩放等级值不正确。经度(-180~180),纬度(-90~90),缩放等级(1~18),文档：https://guole.fun/posts/41887/&#x27;); throw new Error(&#x27;标签内经纬度或缩放等级值不正确，请查看文档：https://guole.fun/posts/41887/&#x27;); &#125; &#125; else &#123; console.error(&#x27;&gt;&gt;&gt;&gt;&gt;&gt;&gt;geoqMap标签错误：标签内经纬度或缩放等级值不正确。经度(-180~180),纬度(-90~90),缩放等级(1~18),文档：https://guole.fun/posts/41887/&#x27;); throw new Error(&#x27;标签内经纬度或缩放等级值不正确，请查看文档：https://guole.fun/posts/41887/&#x27;); &#125; if (args.length &gt;= 4) &#123; if (zoom &lt; 1 || zoom &gt; 18 ) &#123; console.error(&#x27;&gt;&gt;&gt;&gt;&gt;&gt;&gt;geoqMap标签错误：标签内缩放等级超出范围(1~18)，请查看文档：https://guole.fun/posts/41887/&#x27;); throw new Error(&#x27;标签内缩放等级超出范围(1~18)，请查看文档：https://guole.fun/posts/41887/&#x27;); &#125; else &#123;&#125; &#125; else &#123;&#125; let mapid = &#x27;geoqMap-&#x27; + altLan + &#x27;-&#x27; + altLat; let result = &#x27;&#x27;; result += css_text; result += js_text; result += ChineseTmsProviders; result += &#x27;&lt;div id=&quot;&#x27; + mapid + &#x27;&quot;&#x27; + &#x27; style=&quot;max-width:&#x27; + mapWidth + &#x27;; height:&#x27; + mapHeight + &#x27;;display: block;margin:0 auto;z-index:1;border-radius: 5px;&quot;&gt;&lt;/div&gt;&#x27;; result += &#x27;&lt;script type=&quot;text/javascript&quot;&gt;&#x27;; result += &quot;var normalm1=L.tileLayer.chinaProvider(&#x27;Geoq.Normal.Map&#x27;,&#123;maxZoom:20,minZoom:1,attribution:&#x27;&quot; + geoq_txt + &quot;&#x27;&#125;);&quot;; result += &quot;var normalm2=L.tileLayer.chinaProvider(&#x27;Geoq.Normal.PurplishBlue&#x27;,&#123;maxZoom:20,minZoom:1,attribution:&#x27;&quot; + geoq_txt + &quot;&#x27;&#125;);&quot;; result += &quot;var normalm3=L.tileLayer.chinaProvider(&#x27;Geoq.Normal.Gray&#x27;,&#123;maxZoom:20,minZoom:1,attribution:&#x27;&quot; + geoq_txt + &quot;&#x27;&#125;);&quot;; result += &quot;var normalm4=L.tileLayer.chinaProvider(&#x27;Geoq.Normal.Warm&#x27;,&#123;maxZoom:20,minZoom:1,attribution:&#x27;&quot; + geoq_txt + &quot;&#x27;&#125;);&quot;; result += &quot;var normalm5=L.tileLayer.chinaProvider(&#x27;Geoq.Theme.Hydro&#x27;,&#123;maxZoom:20,minZoom:1,attribution:&#x27;&quot; + geoq_txt + &quot;&#x27;&#125;);&quot;; result += &#x27;var normal=L.layerGroup([normalm1,normalm2,normalm3,normalm4,normalm5]);&#x27;; result += &#x27;var baseLayers=&#123;&quot;智图地图&quot;:normalm1,&quot;午夜蓝&quot;:normalm2,&quot;灰色&quot;:normalm3,&quot;暖色&quot;:normalm4,&quot;水系&quot;:normalm5&#125;;&#x27;; if (args.length == 7) &#123; if (args[6].trim() == 2) &#123; result += &#x27;var mymap=L.map(&quot;&#x27; + mapid + &#x27;&quot;,&#123;center:[&#x27; + altLat + &#x27;,&#x27; + altLan + &#x27;],zoom:&#x27; + zoom + &#x27;,layers:[normalm2],zoomControl:false&#125;);&#x27;; &#125; else if (args[6].trim() == 3) &#123; result += &#x27;var mymap=L.map(&quot;&#x27; + mapid + &#x27;&quot;,&#123;center:[&#x27; + altLat + &#x27;,&#x27; + altLan + &#x27;],zoom:&#x27; + zoom + &#x27;,layers:[normalm3],zoomControl:false&#125;);&#x27;; &#125; else if (args[6].trim() == 4) &#123; result += &#x27;var mymap=L.map(&quot;&#x27; + mapid + &#x27;&quot;,&#123;center:[&#x27; + altLat + &#x27;,&#x27; + altLan + &#x27;],zoom:&#x27; + zoom + &#x27;,layers:[normalm4],zoomControl:false&#125;);&#x27;; &#125; else if (args[6].trim() == 5) &#123; result += &#x27;var mymap=L.map(&quot;&#x27; + mapid + &#x27;&quot;,&#123;center:[&#x27; + altLat + &#x27;,&#x27; + altLan + &#x27;],zoom:&#x27; + zoom + &#x27;,layers:[normalm5],zoomControl:false&#125;);&#x27;; &#125; else &#123; result += &#x27;var mymap=L.map(&quot;&#x27; + mapid + &#x27;&quot;,&#123;center:[&#x27; + altLat + &#x27;,&#x27; + altLan + &#x27;],zoom:&#x27; + zoom + &#x27;,layers:[normalm1],zoomControl:false&#125;);&#x27;; &#125; &#125; else &#123; result += &#x27;var mymap=L.map(&quot;&#x27; + mapid + &#x27;&quot;,&#123;center:[&#x27; + altLat + &#x27;,&#x27; + altLan + &#x27;],zoom:&#x27; + zoom + &#x27;,layers:[normalm1],zoomControl:false&#125;);&#x27;; &#125; result += &quot;L.control.layers(baseLayers,null).addTo(mymap);L.control.zoom(&#123;zoomInTitle:&#x27;放大&#x27;,zoomOutTitle:&#x27;缩小&#x27;&#125;).addTo(mymap);&quot;; if (args.length == 2) &#123; result += &#x27;&lt;/script&gt;&#x27;; return result; &#125; else &#123; result += &quot;var marker = L.marker([&#x27;&quot; + altLat + &quot;&#x27;,&#x27;&quot; + altLan + &quot;&#x27;]).addTo(mymap);&quot;; result += &#x27;marker.bindPopup(&quot;&#x27; + alt + &#x27;&quot;).openPopup();&#x27;; result += &#x27;&lt;/script&gt;&#x27;; return result; &#125;&#125;;hexo.extend.tag.register(&#x27;geoqMap&#x27;, geoq);hexo.extend.tag.register(&#x27;GeoqMap&#x27;, geoq);hexo.extend.tag.register(&#x27;GeoQ&#x27;, geoq);function google(args)&#123; args = args.join(&#x27; &#x27;).split(&#x27;,&#x27;); let mapWidth = &#x27;100%&#x27;; let mapHeight = &#x27;360px&#x27;; let zoom = 14; let alt = &#x27;&#x27;; let altLan = 104.077795; let altLat = 30.65555; if (args.length == 1) &#123; alt = &#x27;这里是成都春熙路，超多小姐姐！&#x27;; &#125; else if (args.length == 2) &#123; altLan = args[0].trim(); altLat = args[1].trim(); &#125; else if (args.length == 3) &#123; altLan = args[0].trim(); altLat = args[1].trim(); alt = args[2].trim(); &#125; else if (args.length == 4) &#123; altLan = args[0].trim(); altLat = args[1].trim(); alt = args[2].trim(); zoom = args[3].trim(); &#125; else if (args.length == 5) &#123; altLan = args[0].trim(); altLat = args[1].trim(); alt = args[2].trim(); zoom = args[3].trim(); mapWidth = args[4].trim(); &#125; else if (args.length == 6 || args.length == 7) &#123; altLan = args[0].trim(); altLat = args[1].trim(); alt = args[2].trim(); zoom = args[3].trim(); mapWidth = args[4].trim(); mapHeight = args[5].trim(); &#125; else if (args.length &gt; 7 ) &#123; console.error(&#x27;&gt;&gt;&gt;&gt;&gt;&gt;&gt;googleMap标签错误：标签内参数不正确，请查看文档：https://guole.fun/posts/41887/&#x27;); throw new Error(&#x27;标签内参数不正确,请查看文档：https://guole.fun/posts/41887/&#x27;); &#125; let n = /^(\\-|\\+)?\\d+(\\.\\d+)?$/; //匹配正负数，包含正负浮点数 let r = /^\\+?[1-9][0-9]*$/; //匹配正整数 if (n.test(altLan) &amp;&amp; n.test(altLat) &amp;&amp; altLan &lt;= 180 &amp;&amp; altLan &gt;= -180 &amp;&amp; altLat &lt;= 90 &amp;&amp; altLat &gt;= -90 ) &#123; if (r.test(zoom)) &#123; &#125; else &#123; console.error(&#x27;&gt;&gt;&gt;&gt;&gt;&gt;&gt;googleMap标签错误：标签内经纬度或缩放等级值不正确。经度(-180~180),纬度(-90~90),缩放等级(1~20),文档：https://guole.fun/posts/41887/&#x27;); throw new Error(&#x27;标签内经纬度或缩放等级值不正确，请查看文档：https://guole.fun/posts/41887/&#x27;); &#125; &#125; else &#123; console.error(&#x27;&gt;&gt;&gt;&gt;&gt;&gt;&gt;googleMap标签错误：标签内经纬度或缩放等级值不正确。经度(-180~180),纬度(-90~90),缩放等级(1~20),文档：https://guole.fun/posts/41887/&#x27;); throw new Error(&#x27;标签内经纬度或缩放等级值不正确，请查看文档：https://guole.fun/posts/41887/&#x27;); &#125; if (args.length &gt;= 4) &#123; if (zoom &lt; 1 || zoom &gt; 20 ) &#123; console.error(&#x27;&gt;&gt;&gt;&gt;&gt;&gt;&gt;googleMap标签错误：标签内缩放等级超出范围(1~20)，请查看文档：https://guole.fun/posts/41887/&#x27;); throw new Error(&#x27;标签内缩放等级超出范围(1~20)，请查看文档：https://guole.fun/posts/41887/&#x27;); &#125; else &#123;&#125; &#125; else &#123;&#125; let mapid = &#x27;googleMap-&#x27; + altLan + &#x27;-&#x27; + altLat; let result = &#x27;&#x27;; result += css_text; result += js_text; result += ChineseTmsProviders; result += &#x27;&lt;div id=&quot;&#x27; + mapid + &#x27;&quot;&#x27; + &#x27; style=&quot;max-width:&#x27; + mapWidth + &#x27;; height:&#x27; + mapHeight + &#x27;;display: block;margin:0 auto;z-index:1;border-radius: 5px;&quot;&gt;&lt;/div&gt;&#x27;; result += &#x27;&lt;script type=&quot;text/javascript&quot;&gt;&#x27;; result += &quot;var normalMap=L.tileLayer.chinaProvider(&#x27;Google.Normal.Map&#x27;,&#123;maxZoom:22,minZoom:1,attribution:&#x27;&quot; + google_txt + &quot;&#x27;&#125;),satelliteMap=L.tileLayer.chinaProvider(&#x27;Google.Satellite.Map&#x27;,&#123;maxZoom:22,minZoom:1,attribution:&#x27;&quot; + google_txt + &quot;&#x27;&#125;),routeMap=L.tileLayer.chinaProvider(&#x27;Google.Satellite.Annotion&#x27;,&#123;maxZoom:22,minZoom:1,attribution:&#x27;&quot; + google_txt + &quot;&#x27;&#125;);&quot;; result += &#x27;var baseLayers=&#123;&quot;谷歌地图&quot;:normalMap,&quot;谷歌卫星图&quot;:satelliteMap,&quot;谷歌卫星标注&quot;: routeMap&#125;;&#x27;; result += &#x27;var overlayLayers=&#123;&#125;;&#x27;; if (args.length == 7) &#123; if (args[6].trim() == 2) &#123; result += &#x27;var mymap=L.map(&quot;&#x27; + mapid + &#x27;&quot;,&#123;center:[&#x27; + altLat + &#x27;,&#x27; + altLan + &#x27;],zoom:&#x27; + zoom + &#x27;,layers:[satelliteMap],zoomControl:false&#125;);&#x27;; &#125; else if (args[6].trim() == 3) &#123; result += &#x27;var mymap=L.map(&quot;&#x27; + mapid + &#x27;&quot;,&#123;center:[&#x27; + altLat + &#x27;,&#x27; + altLan + &#x27;],zoom:&#x27; + zoom + &#x27;,layers:[routeMap],zoomControl:false&#125;);&#x27;; &#125; else &#123; result += &#x27;var mymap=L.map(&quot;&#x27; + mapid + &#x27;&quot;,&#123;center:[&#x27; + altLat + &#x27;,&#x27; + altLan + &#x27;],zoom:&#x27; + zoom + &#x27;,layers:[normalMap],zoomControl:false&#125;);&#x27;; &#125; &#125; else &#123; result += &#x27;var mymap=L.map(&quot;&#x27; + mapid + &#x27;&quot;,&#123;center:[&#x27; + altLat + &#x27;,&#x27; + altLan + &#x27;],zoom:&#x27; + zoom + &#x27;,layers:[normalMap],zoomControl:false&#125;);&#x27;; &#125; result += &quot;L.control.layers(baseLayers,null).addTo(mymap);L.control.zoom(&#123;zoomInTitle:&#x27;放大&#x27;,zoomOutTitle:&#x27;缩小&#x27;&#125;).addTo(mymap);&quot;; if (args.length == 2) &#123; result += &#x27;&lt;/script&gt;&#x27;; return result; &#125; else &#123; result += &quot;var marker = L.marker([&#x27;&quot; + altLat + &quot;&#x27;,&#x27;&quot; + altLan + &quot;&#x27;]).addTo(mymap);&quot;; result += &#x27;marker.bindPopup(&quot;&#x27; + alt + &#x27;&quot;).openPopup();&#x27;; result += &#x27;&lt;/script&gt;&#x27;; return result; &#125;&#125;;hexo.extend.tag.register(&#x27;googleMap&#x27;, google);hexo.extend.tag.register(&#x27;GoogleMap&#x27;, google);用法示例1&#123;% map 100%, 580px, 5, 113.264385, 23.12911; 110.93, 21.66, &quot;我的快乐老家！&quot;;113.26, 23.13, &quot;我永远的广州！&quot; %&#125;","tags":["Hexo"],"categories":["Hexo"]},{"title":"Hello World","path":"/2024/09/07/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment"},{"path":"/bilibili/index.html","content":""},{"title":"我的毛坯房人生","path":"/intro/index.html","content":"欢迎来到AquaMind空间 关于我 一些矛盾综合体 磕CP必塌方の毒奶专业户 干啥啥不行混子人のINFP-A 13年时刻准备爬墙のSONE 45度躺卷不平の金融人 日常悲观の乐观主义者 喜欢八字玄学の唯物主义派 人生打卡清单 那些想去的远方 var normalm = L.tileLayer.chinaProvider('GaoDe.Normal.Map', {maxZoom: 20, minZoom: 1, attribution: '高德地图'}); var mymap = L.map('map-china', {center: [ 23.12911, 113.264385], zoom: 5, layers: [normalm], zoomControl: false}); var marker = L.marker([21.66, 110.93]).addTo(mymap); marker.bindPopup(\"我的快乐老家！\").openPopup();var marker = L.marker([23.13, 113.26]).addTo(mymap); marker.bindPopup(\"我永远的广州！\").openPopup();var marker = L.marker([48.45, 87.33]).addTo(mymap); marker.bindPopup(\"新疆吹我本人!\").openPopup();var marker = L.marker([29.65, 91.12]).addTo(mymap); marker.bindPopup(\"这辈子就只会去一次的地方\").openPopup();var marker = L.marker([34.34, 108.94]).addTo(mymap); marker.bindPopup(\"咸阳机场的免费过夜套餐\").openPopup();var marker = L.marker([27.88, 108.72]).addTo(mymap); marker.bindPopup(\"2024年第一爬!\").openPopup();var marker = L.marker([29.56, 106.55]).addTo(mymap); marker.bindPopup(\"佳佳的故乡（没去过版本）\").openPopup();var marker = L.marker([34.42, 115.66]).addTo(mymap); marker.bindPopup(\"慧慧&霄霄的故乡!(没去过版本)\").openPopup();var marker = L.marker([37.86, 113.58]).addTo(mymap); marker.bindPopup(\"姝姝的故乡!(没去过版本)\").openPopup();var marker = L.marker([35.75, 114.30]).addTo(mymap); marker.bindPopup(\"棒棒的故乡!(没去过版本)\").openPopup();var marker = L.marker([23.02, 113.12]).addTo(mymap); marker.bindPopup(\"黄老师的家！\").openPopup();var marker = L.marker([20.02, 110.35]).addTo(mymap); marker.bindPopup(\"欣瑜未来的家(没去过版本)\").openPopup();var marker = L.marker([30.57, 104.07]).addTo(mymap); marker.bindPopup(\"茜茜的故乡(没去过版本)\").openPopup();var marker = L.marker([25.68, 100.30]).addTo(mymap); marker.bindPopup(\"混吃混喝的第十三世大理国史丞\").openPopup();var marker = L.marker([42.02, 128.05]).addTo(mymap); marker.bindPopup(\"延吉流水线公主作业很成功\").openPopup();var marker = L.marker([23.6978, 120.9605]).addTo(mymap); marker.bindPopup(\"永远怀念2019年的湾湾\").openPopup();var marker = L.marker([37.5665, 126.9780]).addTo(mymap); marker.bindPopup(\"我永远的姐\").openPopup();var marker = L.marker([28.2282, 112.9388]).addTo(mymap); marker.bindPopup(\"茶颜悦色的故乡\").openPopup();var marker = L.marker([30.5928, 114.3055]).addTo(mymap); marker.bindPopup(\"东湖Nice！\").openPopup();var marker = L.marker([22.3193, 114.1694]).addTo(mymap); marker.bindPopup(\"梦回Personal\").openPopup();var marker = L.marker([22.1987, 113.5437]).addTo(mymap); marker.bindPopup(\"蹭吃一条街大三巴\").openPopup();var marker = L.marker([36.6170, 101.7780]).addTo(mymap); marker.bindPopup(\"晕车吃不下的半天妖\").openPopup();var marker = L.marker([25.2730, 110.2990]).addTo(mymap); marker.bindPopup(\"和欣瑜的十年之约 誓要夺回十年前被骗的钱!\").openPopup();var marker = L.marker([39.90, 116.41]).addTo(mymap); marker.bindPopup(\"想念下雪的SKD\").openPopup();L.control.zoom({zoomInTitle: '放大', zoomOutTitle: '缩小'}).addTo(mymap); 我的人生歌单 QQ音乐听歌时长榜榜一大姐 1989 年 3 月 9 日全网最爱的一首歌：聚集记忆的时间 Your browser does not support the audio tag. 2007 年 8 月 5 日最近喜欢的国语歌：如果的事 Your browser does not support the audio tag. 2021 年 11 月 6 日我的KTV必唱曲：好心分手 Your browser does not support the audio tag. 2024 年 9 月 1 日最近常听的一首歌：落日与鲸 Your browser does not support the audio tag. 近期计划 P人的计划看看就好 O1 2023年的小目标：健康地活着 来自2024年的复盘：《基本》完成目标 正常 30% KR1 XXXXXXX 很顺利一点都不顺利! 风险 1% KR2 微信公众号每周一篇学习笔记 统计&amp;机器学习内容Python办公自动化案例hexo主题装修日记 延期 50% KR3 6月底完结XXX 思如泉涌,快完结了自己都看不下去的程度,弃更中 延期 70% KR4 各式副业搞钱进度 搞到钱了垃圾A股,亏到人麻; 副业卖东西,成功亏掉货钱 风险 0%"}]