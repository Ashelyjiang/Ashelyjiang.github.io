---
# 基本信息
title: Hexo装修日记
tags: [Hexo]
categories: [Hexo]
description: Stellar主题超详细魔改教程 # excerpt 也可
references:
  - '[Stellar开源博主文档](https://xaoxuu.com/wiki/stellar/pages/)'
  - '[YOLOのBlog博主](https://felicxfoster.github.io/4199909915.html)'

# 可选
author: 筑基期摸鱼大师
type: tech # tech/story
banner: /photoes/page_banner.jpg
---

{% note color:cyan Stellar主题最全配置信息可参考开源作者[Xaoxuu](https://xaoxuu.com/wiki/stellar/tag-plugins/express/) %}

### 一键配置

- 因为我是直接用npm方式加载主题,所以我的Stellar主题源文件内容都在文件夹node_modules里。
- 直接在myblog文件夹里新创建一个命名为_config.stellar.yml的文件,这个文件中的配置信息优先级高于主题文件夹中的配置文件。
- 然后将/node_modules/hexo-theme-stellar/_config.yml的内容复制粘贴到刚刚创建的_config.stellar.yml，再作对应修改即可。


### 字体修改

{% tabs active:2 align:center %}

<!-- tab 效果展示 -->
{% image /photoes/字体修改展示效果图.png  %}

<!-- tab 部署程序 -->
{% endtabs %}

{% folders %}
<!-- folder _config.yml文件的最后一行引入字体文件 -->
```swift
inject:
  head:
    - <link rel="stylesheet" href="https://cdn.staticfile.org/lxgw-wenkai-screen-webfont/1.6.0/lxgwwenkaiscreen.css">
```
<!-- folder 在 _config.stellar.yml 中找到 style.font-family,修改增加字体"LXGW WenKai Screen" -->
```swift
style:
    font-family:
        logo: '"LXGW WenKai Screen",system-ui, "Microsoft Yahei", "Segoe UI", -apple-system, Roboto, Ubuntu, "Helvetica Neue", Arial, "WenQuanYi Micro Hei", sans-serif'
        body: '"LXGW WenKai Screen",system-ui, "Microsoft Yahei", "Segoe UI", -apple-system, Roboto, Ubuntu, "Helvetica Neue", Arial, "WenQuanYi Micro Hei", sans-serif'
```
{% endfolders %}


### 添加网站运行时间

{% tabs active:2 align:center %}

<!-- tab 效果展示 -->
{% image /photoes/网站底部时间样式.png  %}

<!-- tab 部署程序 -->
{% endtabs %}

{% folders %}
<!-- folder 在 _config.stellar.yml 中找到footer的content处,将此处代码修改为如下样式 -->
```swift
footer:
  content: | # 支持 Markdown 格式
    <center>
    <span>
    © 2024
    <a style="font-weight: bold; auto;" target="_blank" rel="noopener" href="https://github.com/Ashelyjiang">AquaMind</a>
    使用 <a style="font-weight: bold; auto;" target="_blank" rel="noopener" href="https://github.com/FelicxFoster/hexo-theme-stellar">Stellar</a>
    创建
    </span>
    <br>
    <span id="runtime_span"></span>
    <script type="text/javascript">
    function show_runtime() {
      window.setTimeout(show_runtime, 1000);
      var X = new Date("9/2/2024 00:00:00");
      var Y = new Date();
      var T = (Y.getTime() - X.getTime());
      var M = 24 * 60 * 60 * 1000;
      var a = T / M;
      var diffDays = Math.floor(a);
      var b = (a - diffDays) * 24;
      var diffHours = Math.floor(b);
      var c = (b - diffHours) * 60;
      var diffMinutes = Math.floor(c);
      var diffSeconds = Math.floor((c - diffMinutes) * 60);
      document.getElementById("runtime_span").innerHTML = "🦉已经开业：" + diffDays + " 天 " + diffHours + " 小时 " + diffMinutes + " 分钟 " + diffSeconds + " 秒🦉";
    }
    show_runtime();
    </script>
    <br>
    <script async src="//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js"></script>
    <span id="busuanzi_container_site_uv">
        本小破站已经有<span id="busuanzi_value_site_uv"></span>人光顾过🥂
    </span>
    </center>
```
{% endfolders %}



### 使用fontawesome动态图标

{% tabs active:2 align:center %}

<!-- tab 效果展示 -->
{% image /photoes/动态图标.gif %}

<!-- tab 部署程序 -->
{% endtabs %}

{% folders %}
<!-- folder _config.yml文件的引入使图标跳动的文件 -->
```swift
inject:
  head:
    - <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">   # 动态图标
```
<!-- folder 在 _config.stellar.yml 中footer栏处配置动态图标, 图标在 <a href="https://fontawesome.com/icons" target="_blank">FontAwesome</a> 网站, 点击图标名字就是 HTML 格式 class 里面的内容 + fa-bounce -->

```swift
footer:
  social:
     github:
       icon: '<i class="fa-solid fa-github fa-brands fa-bounce"></i>'
       title: 'github'
       url: /
```
{% endfolders %}


### 网页泡泡点击效果

{% tabs active:2 align:center %}

<!-- tab 效果展示 -->
{% image /photoes/点击效果.gif %}

<!-- tab 部署程序 -->
{% endtabs %}

{% folders %}
<!-- folder 在/node_modules/hexo-theme-stellar/source/js/services文件夹下新创建firework.js文件.文件是根据CSDN上单个爱心代码让Chat老师加工生成,谨慎食用。 -->

```swift
!function (window, document) {
    // 初始化函数，设置样式并启动动画
    function init() {
        // 添加CSS样式
        addStyles(`
            .spark {
                position: fixed;
                border-radius: 50%;
                pointer-events: none;
                transition: all 1s ease-out;
                z-index: 99999;
            }
        `);
        // 绑定点击事件
        bindClickEvent();
        // 启动动画
        animate();
    }

    // 添加CSS样式到页面
    function addStyles(styles) {
        var styleElement = document.createElement("style");
        styleElement.type = "text/css";
        try {
            styleElement.appendChild(document.createTextNode(styles));
        } catch (e) {
            styleElement.styleSheet.cssText = styles;
        }
        document.head.appendChild(styleElement);
    }

    // 绑定点击事件
    function bindClickEvent() {
        window.addEventListener('click', function (event) {
            createSparks(event);
        });
    }

    // 创建多个火花元素
    function createSparks(event) {
        var numberOfSparks = 30; // 火花数量
        for (var i = 0; i < numberOfSparks; i++) {
            var sparkElement = document.createElement("div");
            sparkElement.className = "spark";
            var angle = Math.random() * 2 * Math.PI; // 随机角度
            var speed = Math.random() * 150 + 50; // 随机速度
            sparks.push({
                el: sparkElement,
                x: event.clientX,
                y: event.clientY,
                dx: Math.cos(angle) * speed, // 水平速度
                dy: Math.sin(angle) * speed, // 垂直速度
                alpha: 1,
                scale: Math.random() * 1.5 + 0.5, // 随机缩放
                color: getRandomPinkColor() // 统一为粉色系颜色
            });
            document.body.appendChild(sparkElement);
        }
    }

    // 获取粉色系随机颜色
    function getRandomPinkColor() {
        var r = 255;
        var g = Math.floor(Math.random() * 156 + 100); // 绿色值在100到255之间
        var b = Math.floor(Math.random() * 255); // 蓝色值在0到255之间
        return `rgb(${r},${g},${b})`;
    }

    // 动画函数
    function animate() {
        for (var i = 0; i < sparks.length; i++) {
            var spark = sparks[i];
            if (spark.alpha <= 0) {
                document.body.removeChild(spark.el);
                sparks.splice(i, 1);
                i--;
            } else {
                spark.x += spark.dx * 0.05; // 控制水平运动速度
                spark.y += spark.dy * 0.05; // 控制垂直运动速度
                spark.alpha -= 0.02; // 增加透明度减少速度
                spark.el.style.cssText = `
                    left:${spark.x}px;
                    top:${spark.y}px;
                    opacity:${spark.alpha};
                    background:${spark.color};
                    width:${10 * spark.scale}px;
                    height:${10 * spark.scale}px;
                    z-index:99999;
                `;
            }
        }
        requestAnimationFrame(animate);
    }

    // 兼容不同浏览器的 requestAnimationFrame
    window.requestAnimationFrame = window.requestAnimationFrame ||
        window.webkitRequestAnimationFrame ||
        window.mozRequestAnimationFrame ||
        window.oRequestAnimationFrame ||
        window.msRequestAnimationFrame ||
        function (callback) {
            setTimeout(callback, 1000 / 60);
        };

    var sparks = []; // 存储所有火花元素

    // 等待 DOM 加载完成后再初始化
    document.addEventListener('DOMContentLoaded', init);
}(window, document);

```
<!-- folder _config.yml文件的引入网页泡泡点击效果js文件 -->
```swift
inject:
  head:
    - <script async data-pjax src="/js/services/firework.js"></script>   # 泡泡效果
```
{% endfolders %}


### 欢迎信息设置

{% tabs active:2 align:center %}

<!-- tab 效果展示 -->
{% image /photoes/欢迎信息栏设置.png %}

<!-- tab 部署程序 -->
{% endtabs %}

{% folders %}
<!-- folder 首先在腾讯位置服务注册帐号申请一个KEY,注册流程详细可参考<a href="https://ichika.cc/Article/beautiful_IPLocation/#%E8%8E%B7%E5%8F%96APIkey" target="_blank">大佬教程</a>-->
PS:注意要在配额管理-账户额度-IP定位处,分配对应的配额,不然无法调用API返回定位信息。

<!-- folder 在/node_modules/hexo-theme-stellar/source/js/services文件夹下新创建txmap.js文件,并替换成自己的APIKEY。代码参考<a href="https://www.flyalready.cn/2024/04/16/Hexo%20Stellar%20%E4%B8%BB%E9%A2%98%E8%A3%85%E4%BF%AE%E7%AC%94%E8%AE%B0/#%E7%BB%99%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E5%9C%B0%E7%90%86%E5%AE%9A%E4%BD%8D%E5%B9%B6%E5%88%B6%E4%BD%9C%E4%B8%AA%E6%80%A7%E6%AC%A2%E8%BF%8E" target="_blank">大佬教程</a>,但样式我稍作了修改。-->

```swift
//get请求
$.ajax({
    type: 'get',
    url: 'https://apis.map.qq.com/ws/location/v1/ip',
    data: {
        key: '自己的APIKEY',
        output: 'jsonp',
    },
    dataType: 'jsonp',
    success: function (res) {
        ipLoacation = res;
    }
})
function getDistance(e1, n1, e2, n2) {
    const R = 6371
    const { sin, cos, asin, PI, hypot } = Math
    let getPoint = (e, n) => {
        e *= PI / 180
        n *= PI / 180
        return { x: cos(n) * cos(e), y: cos(n) * sin(e), z: sin(n) }
    }

    let a = getPoint(e1, n1)
    let b = getPoint(e2, n2)
    let c = hypot(a.x - b.x, a.y - b.y, a.z - b.z)
    let r = asin(c / 2) * 2 * R
    return Math.round(r);
}

function showWelcome() {

    let dist = getDistance(113.34499552, 23.15537143, ipLoacation.result.location.lng, ipLoacation.result.location.lat); //这里换成自己的经纬度
    let pos = ipLoacation.result.ad_info.nation;
    let ip;
    let posdesc;
    //根据国家、省份、城市信息自定义欢迎语
    switch (ipLoacation.result.ad_info.nation) {
        case "日本":
            posdesc = "よろしく，一起去看樱花吗";
            break;
        case "美国":
            posdesc = "Let us live in peace!";
            break;
        case "英国":
            posdesc = "想同你一起夜乘伦敦眼";
            break;
        case "俄罗斯":
            posdesc = "干了这瓶伏特加！";
            break;
        case "法国":
            posdesc = "C'est La Vie";
            break;
        case "德国":
            posdesc = "Die Zeit verging im Fluge.";
            break;
        case "澳大利亚":
            posdesc = "一起去大堡礁吧！";
            break;
        case "加拿大":
            posdesc = "拾起一片枫叶赠予你";
            break;
        case "中国":
            pos = ipLoacation.result.ad_info.province + " " + ipLoacation.result.ad_info.city + " " + ipLoacation.result.ad_info.district;
            ip = ipLoacation.result.ip;
            switch (ipLoacation.result.ad_info.province) {
                case "北京市":
                    posdesc = "北——京——欢迎你~~~";
                    break;
                case "天津市":
                    posdesc = "讲段相声吧。";
                    break;
                case "河北省":
                    posdesc = "山势巍巍成壁垒，天下雄关。铁马金戈由此向，无限江山。";
                    break;
                case "山西省":
                    posdesc = "展开坐具长三尺，已占山河五百余。";
                    break;
                case "内蒙古自治区":
                    posdesc = "天苍苍，野茫茫，风吹草低见牛羊。";
                    break;
                case "辽宁省":
                    posdesc = "我想吃烤鸡架！";
                    break;
                case "吉林省":
                    posdesc = "状元阁就是东北烧烤之王。";
                    break;
                case "黑龙江省":
                    posdesc = "很喜欢哈尔滨大剧院。";
                    break;
                case "上海市":
                    posdesc = "众所周知，中国只有两个城市。";
                    break;
                case "江苏省":
                    switch (ipLoacation.result.ad_info.city) {
                        case "南京市":
                            posdesc = "这是我挺想去的城市啦。";
                            break;
                        case "苏州市":
                            posdesc = "上有天堂，下有苏杭。";
                            break;
                        default:
                            posdesc = "散装是必须要散装的。";
                            break;
                    }
                    break;
                case "浙江省":
                    posdesc = "东风渐绿西湖柳，雁已还人未南归。";
                    break;
                case "河南省":
                    switch (ipLoacation.result.ad_info.city) {
                        case "郑州市":
                            posdesc = "豫州之域，天地之中。";
                            break;
                        case "南阳市":
                            posdesc = "臣本布衣，躬耕于南阳。此南阳非彼南阳！";
                            break;
                        case "驻马店市":
                            posdesc = "峰峰有奇石，石石挟仙气。嵖岈山的花很美哦！";
                            break;
                        case "开封市":
                            posdesc = "刚正不阿包青天。";
                            break;
                        case "洛阳市":
                            posdesc = "洛阳牡丹甲天下。";
                            break;
                        default:
                            posdesc = "可否带我品尝河南烩面啦？";
                            break;
                    }
                    break;
                case "安徽省":
                    posdesc = "蚌埠住了，芜湖起飞。";
                    break;
                case "福建省":
                    posdesc = "井邑白云间，岩城远带山。";
                    break;
                case "江西省":
                    posdesc = "落霞与孤鹜齐飞，秋水共长天一色。";
                    break;
                case "山东省":
                    posdesc = "遥望齐州九点烟，一泓海水杯中泻。";
                    break;
                case "湖北省":
                    posdesc = "来碗热干面！";
                    break;
                case "湖南省":
                    posdesc = "74751，长沙斯塔克。";
                    break;
                case "广东省":
                    posdesc = "老板来两斤福建人。";
                    break;
                case "广西壮族自治区":
                    posdesc = "桂林山水甲天下。";
                    break;
                case "海南省":
                    posdesc = "朝观日出逐白浪，夕看云起收霞光。";
                    break;
                case "四川省":
                    posdesc = "康康川妹子。";
                    break;
                case "贵州省":
                    posdesc = "茅台，学生，再塞200。";
                    break;
                case "云南省":
                    posdesc = "玉龙飞舞云缠绕，万仞冰川直耸天。";
                    break;
                case "西藏自治区":
                    posdesc = "躺在茫茫草原上，仰望蓝天。";
                    break;
                case "陕西省":
                    posdesc = "来份臊子面加馍。";
                    break;
                case "甘肃省":
                    posdesc = "羌笛何须怨杨柳，春风不度玉门关。";
                    break;
                case "青海省":
                    posdesc = "牛肉干和老酸奶都好好吃。";
                    break;
                case "宁夏回族自治区":
                    posdesc = "大漠孤烟直，长河落日圆。";
                    break;
                case "新疆维吾尔自治区":
                    posdesc = "驼铃古道丝绸路，胡马犹闻唐汉风。";
                    break;
                case "台湾省":
                    posdesc = "我在这头，大陆在那头。";
                    break;
                case "香港特别行政区":
                    posdesc = "永定贼有残留地鬼嚎，迎击光非岁玉。";
                    break;
                case "澳门特别行政区":
                    posdesc = "性感荷官，在线发牌。";
                    break;
                default:
                    posdesc = "带我去你的城市逛逛吧！";
                    break;
            }
            break;
        default:
            posdesc = "带我去你的国家逛逛吧。";
            break;
    }

    //根据本地时间切换欢迎语
    let timeChange;
    let date = new Date();
    if (date.getHours() >= 5 && date.getHours() < 11) timeChange = "<span>上午好</span>，一日之计在于晨！";
    else if (date.getHours() >= 11 && date.getHours() < 13) timeChange = "<span>中午好</span>，该摸鱼吃午饭了。";
    else if (date.getHours() >= 13 && date.getHours() < 15) timeChange = "<span>下午好</span>，懒懒地睡个午觉吧！";
    else if (date.getHours() >= 15 && date.getHours() < 16) timeChange = "<span>三点几啦</span>，一起饮茶呀！";
    else if (date.getHours() >= 16 && date.getHours() < 19) timeChange = "<span>夕阳无限好！</span>";
    else if (date.getHours() >= 19 && date.getHours() < 24) timeChange = "<span>晚上好</span>，夜生活嗨起来！";
    else timeChange = "夜深了，早点休息，少熬夜。";

try {
    // 自定义文本和需要放的位置
    document.getElementById("welcome-info").innerHTML =
        `<b>
            <center style="font-family: 'LXGW WenKai Screen', sans-serif; font-size: 1.2em;">🎉 来自站长的问候 🎉</center>
            &emsp;&emsp;欢迎来自 <span style="font-size: 1.6em; font-weight: bold; font-family: 'KaiTi', 'SimKai', '楷体', serif; color: #FFA500;">${pos}</span> 的小伙伴，
            ${timeChange}您现在距离我约 <span style="font-size: 1.6em; font-weight: bold; font-family: 'KaiTi', 'SimKai', '楷体', serif; color: #FFA500;">${dist}</span> 公里，
            <span style="font-family: 'LXGW WenKai Screen', sans-serif;">${posdesc}</span>
        </b>`;
} catch (err) {
    // console.log("Pjax无法获取#welcome-info元素🙄🙄🙄")
}

}
window.onload = showWelcome;
// 如果使用了pjax在加上下面这行代码
document.addEventListener('pjax:complete', showWelcome);
```
<!-- folder 在_config.yml文件的引入两个依赖文件 -->
```swift
inject:
  head:
    - <script src="https://cdn.staticfile.org/jquery/3.6.3/jquery.min.js"></script> # jQuery
    - <script async data-pjax src="/js/services/txmap.js"></script> # 腾讯位置API
```
<!-- folder 在/node_modules/hexo-theme-stellar/_data/widgets.yml文件添加下面的内容;并在 _config.stellar.yml 中home:rightbar: welcomeloc使组件显示。 -->

```swift
welcomeloc:
  layout: markdown
  title: '🎉 网络一线牵 珍惜这段缘'
  linklist:
    columns: 1
    items:
      - icon: '<img src="https://api.iconify.design/ion:dice-outline.svg"/>'
        title: 随机文章
        url: 'javascript:toRandomPost()'
  content: |
      <span id="welcome-info" style="font-family: 'LXGW WenKai Screen', sans-serif;"></span>
```
{% endfolders %}




### 添加地图标注

{% tabs active:2 align:center %}

<!-- tab 效果展示 -->
{% image /photoes/地图标注.png %}

<!-- tab 部署程序 -->
{% endtabs %}

{% folders %}
<!-- folder 安装Hexo-tag-map插件 -->
```swift
npm i hexo-tag-map
```
<!-- folder 安装好插件后即可使用,具体使用方法参考<a href="https://blog.guole.fun/posts/41887/" target="_blank">大佬教程</a>,但因为原本插件只允许标记一个地点,在Chat老师的帮助下,修改了部分代码使其支持多个地点标注。找到/node_modules/hexo-tag-map/index.js文件,将文件代码替换为下面的代码。 -->

```swift
// A map plug-in under hexo, which supports rendering of beautiful interactive maps on article pages.
// * author: guole
// * https://guole.fun/
// * license: Apache-2.0
// * https://guole.fun/posts/41887//blob/main/LICENSE
// {% map altLan, altLat, alt, zoom, mapWidth, mapHeight, tuceng %}
// {% map 经度, 纬度, 文本, 缩放级别, 宽, 高, 图层 %}
// 一个例子：{% map 114.533983, 22.569441,这里是西涌沙滩, 14, 100%, 360px, 1 %}
// 一个例子：{% map %}
// 使用说明：https://guole.fun/posts/41887/

'use strict';

// 地图所需的 CSS 和 JS 资源
const css_text = `<link rel="stylesheet" href="//unpkg.com/hexo-tag-map/lib/leaflet@1.7.1.css">`;
const js_text = `<script data-pjax src="//unpkg.com/hexo-tag-map/lib/leaflet@1.7.1.js"></script>`;
const ChineseTmsProviders = `<script data-pjax src="//unpkg.com/hexo-tag-map/lib/leaflet.ChineseTmsProviders@1.0.4.js"></script>`;
const proj4 = `<script data-pjax src="//unpkg.com/hexo-tag-map/lib/proj4@2.4.3.js"></script>`;
const proj4leaflet = `<script data-pjax src="//unpkg.com/hexo-tag-map/lib/proj4leaflet@1.0.1.min.js"></script>`;
let gaode_txt = "高德地图";

// 处理地图的核心函数
function hunhe(args) {
    // 解析参数, args 是传入的参数数组
    let params = args.join(' ').split(';');  // 参数使用分号分割，用于支持多个标记点
    let mapConfig = params.shift().split(','); // 提取地图配置参数，移除第一个（主配置）

    // 提取地图配置的宽度、高度、缩放级别、中心经度和纬度
    let mapWidth = mapConfig[0] || '100%';
    let mapHeight = mapConfig[1] || '360px';
    let zoom = mapConfig[2] || 5; // 默认为 5 级缩放
    let centerLan = mapConfig[3] || 104.195397; // 默认为中国中心经度
    let centerLat = mapConfig[4] || 35.86166;  // 默认为中国中心纬度

    // 创建返回的 HTML 和 JavaScript 代码字符串
    let result = '';
    let mapid = 'map-china';  // 给地图一个唯一的 id

    // 插入样式和必要的 JS 资源
    result += css_text;
    result += js_text;
    result += ChineseTmsProviders;

    // 创建地图容器
    result += `<div class="map-box" style="margin: 0.8rem 0 1.6rem 0;">
                 <div id="${mapid}" style="max-width:${mapWidth}; height:${mapHeight}; display: block; margin:0 auto; z-index:1; border-radius: 5px;"></div>
               </div>`;

    // 初始化地图的 JS 脚本
    result += `<script type="text/javascript">
                  var normalm = L.tileLayer.chinaProvider('GaoDe.Normal.Map', {maxZoom: 20, minZoom: 1, attribution: '${gaode_txt}'});
                  var mymap = L.map('${mapid}', {center: [${centerLat}, ${centerLan}], zoom: ${zoom}, layers: [normalm], zoomControl: false});
               `;

    // 处理每个标记点，遍历 `params` 中的每一项
    params.forEach(point => {
        let pointArgs = point.split(','); // 标记点参数依然用逗号分割
        if (pointArgs.length >= 3) {
            let altLan = pointArgs[0].trim();  // 经度
            let altLat = pointArgs[1].trim();  // 纬度
            let alt = pointArgs[2].trim();     // 文本

            // 添加标记点到地图上
            result += `var marker = L.marker([${altLat}, ${altLan}]).addTo(mymap);
                        marker.bindPopup("${alt}").openPopup();`;
        }
    });

    // 添加缩放控制到地图上
    result += "L.control.zoom({zoomInTitle: '放大', zoomOutTitle: '缩小'}).addTo(mymap);</script>";

    return result;  // 返回生成的 HTML 和 JS 代码
}

// 注册 Hexo 标签, 当用户在 Markdown 中使用 `{% map %}` 时调用 hunhe 函数
hexo.extend.tag.register('map', hunhe);
hexo.extend.tag.register('Map', hunhe);


function gaode(args){
    args = args.join(' ').split(',');
    let mapWidth = '100%';
    let mapHeight = '360px';
    let zoom = 14;
    let alt = '';
    let altLan = 117.086471;
    let altLat = 36.264217;
    if (args.length == 1) {
        alt = '这里是东岳泰山，海拔1532.7米！';
    } else if (args.length == 2) {
        altLan = args[0].trim();
        altLat = args[1].trim();
    } else if (args.length == 3) {
        altLan = args[0].trim();
        altLat = args[1].trim();
        alt = args[2].trim();
    } else if (args.length == 4) {
        altLan = args[0].trim();
        altLat = args[1].trim();
        alt = args[2].trim();
        zoom = args[3].trim();
    } else if (args.length == 5) {
        altLan = args[0].trim();
        altLat = args[1].trim();
        alt = args[2].trim();
        zoom = args[3].trim();
        mapWidth = args[4].trim();
    } else if (args.length == 6 || args.length == 7) {
        altLan = args[0].trim();
        altLat = args[1].trim();
        alt = args[2].trim();
        zoom = args[3].trim();
        mapWidth = args[4].trim();
        mapHeight = args[5].trim();
    } else if (args.length > 7 ) {
        console.error('>>>>>>>gaodeMap标签错误：标签内参数不正确，请查看文档：https://guole.fun/posts/41887/');
        throw new Error('标签内参数不正确,请查看文档：https://guole.fun/posts/41887/');
    }
        let n = /^(\-|\+)?\d+(\.\d+)?$/; //匹配正负数，包含正负浮点数
        let r = /^\+?[1-9][0-9]*$/; //匹配正整数
        if (n.test(altLan) && n.test(altLat) && altLan <= 180 && altLan >= -180 && altLat <= 90 && altLat >= -90 ) {
            if (r.test(zoom)) {
             } else {
                console.error('>>>>>>>gaodeMap标签错误：标签内经纬度或缩放等级值不正确。经度(-180~180),纬度(-90~90),缩放等级(3~18),文档：https://guole.fun/posts/41887/');
                throw new Error('标签内经纬度或缩放等级值不正确，文档：https://guole.fun/posts/41887/');
                }
        } else {
            console.error('>>>>>>>gaodeMap标签错误：标签内经纬度或缩放等级值不正确。经度(-180~180),纬度(-90~90),缩放等级(3~18),文档：https://guole.fun/posts/41887/');
            throw new Error('标签内经纬度或缩放等级值不正确，请查看文档：https://guole.fun/posts/41887/');
        }
        if (args.length >= 4) {
            if (zoom < 3 || zoom > 18 ) {
                console.error('>>>>>>>gaodeMap标签错误：标签内缩放等级超出范围(3~18)，请查看文档：https://guole.fun/posts/41887/');
                throw new Error('标签内缩放等级超出范围(3~18)，请查看文档：https://guole.fun/posts/41887/');
            } else {}
        } else {}
    let mapid = 'gaodeMap-' + altLan + '-' + altLat;
    let result = '';
    result += css_text;
    result += js_text;
    result += ChineseTmsProviders;
    result += '<div class="map-box" style="margin: 0.8rem 0 1.6rem 0;">';
    result += '<div id="' + mapid + '"' + ' style="max-width:' + mapWidth + '; height:' + mapHeight + ';display: block;margin:0 auto;z-index:1;border-radius: 5px;"></div>';
    result += '</div>';
    result += '<script type="text/javascript">';
    result += "var normalm=L.tileLayer.chinaProvider('GaoDe.Normal.Map',{maxZoom:20,minZoom:1,attribution:'" + gaode_txt + "'});";
    result += "var imgm=L.tileLayer.chinaProvider('GaoDe.Satellite.Map',{maxZoom:20,minZoom:1,attribution:'" + gaode_txt + "'});";
    result += "var imga=L.tileLayer.chinaProvider('GaoDe.Satellite.Annotion',{maxZoom:20,minZoom:1,attribution:'" + gaode_txt + "'});";
    result += 'var normal=L.layerGroup([normalm]),image=L.layerGroup([imgm,imga]);';
    result += 'var baseLayers={"高德地图":normal,"高德卫星地图":imgm,"高德卫星标注":image};';
    if (args.length == 7) {
        if (args[6].trim() == 2) {
            result += "var mymap=L.map('" + mapid + "',{center:[" + altLat + "," + altLan + "],zoom:" + zoom + ",layers:[imgm],zoomControl:false});";
        } else if (args[6].trim() == 3) {
            result += "var mymap=L.map('" + mapid + "',{center:[" + altLat + "," + altLan + "],zoom:" + zoom + ",layers:[image],zoomControl:false});";
        } else {
            result += "var mymap=L.map('" + mapid + "',{center:[" + altLat + "," + altLan + "],zoom:" + zoom + ",layers:[normal],zoomControl:false});";
        }
    } else {
        result += "var mymap=L.map('" + mapid + "',{center:[" + altLat + "," + altLan + "],zoom:" + zoom + ",layers:[normal],zoomControl:false});";
    }
    result += "L.control.layers(baseLayers,null).addTo(mymap);L.control.zoom({zoomInTitle:'放大',zoomOutTitle:'缩小'}).addTo(mymap);";
        if (args.length == 2) {
            result += '</script>';
            return result;
        } else {
            result += "var marker = L.marker(['" + altLat + "','" + altLan + "']).addTo(mymap);";
            result += 'marker.bindPopup("' + alt + '").openPopup();';
            result += '</script>';
            return result;
        }
};
hexo.extend.tag.register('gaodeMap', gaode);
hexo.extend.tag.register('GaodeMap', gaode);
hexo.extend.tag.register('Amap', gaode);
hexo.extend.tag.register('amap', gaode);

function openstreet(args){
    args = args.join(' ').split(',');
    let mapWidth = '100%';
    let mapHeight = '360px';
    let zoom = 14;
    let alt = '';
    let altLan = 113.892994;
    let altLat = 22.55025;
    if (args.length == 1) {
        alt = '这里是深圳欢乐港湾！';
    } else if (args.length == 2) {
        altLan = args[0].trim();
        altLat = args[1].trim();
    } else if (args.length == 3) {
        altLan = args[0].trim();
        altLat = args[1].trim();
        alt = args[2].trim();
    } else if (args.length == 4) {
        altLan = args[0].trim();
        altLat = args[1].trim();
        alt = args[2].trim();
        zoom = args[3].trim();
    } else if (args.length == 5) {
        altLan = args[0].trim();
        altLat = args[1].trim();
        alt = args[2].trim();
        zoom = args[3].trim();
        mapWidth = args[4].trim();
    } else if (args.length == 6) {
        altLan = args[0].trim();
        altLat = args[1].trim();
        alt = args[2].trim();
        zoom = args[3].trim();
        mapWidth = args[4].trim();
        mapHeight = args[5].trim();
    } else if (args.length > 6 ) {
        console.error('>>>>>>>openstreetMap标签错误：标签内参数不正确,请查看文档：https://guole.fun/posts/41887/');
        throw new Error('标签内参数不正确,请查看文档：https://guole.fun/posts/41887/');
    }
        let n = /^(\-|\+)?\d+(\.\d+)?$/; //匹配正负数，包含正负浮点数
        let r = /^\+?[1-9][0-9]*$/; //匹配正整数
        if (n.test(altLan) && n.test(altLat) && altLan <= 180 && altLan >= -180 && altLat <= 90 && altLat >= -90 ) {
            if (r.test(zoom)) {
             } else {
                console.error('>>>>>>>openstreetMap标签错误：标签内经纬度或缩放等级值不正确。经度(-180~180),纬度(-90~90),缩放等级(1~18),文档：https://guole.fun/posts/41887/');
                throw new Error('标签内经纬度或缩放等级值不正确，请查看文档：https://guole.fun/posts/41887/');
                }
        } else {
            console.error('>>>>>>>openstreetMap标签错误：标签内经纬度或缩放等级值不正确。经度(-180~180),纬度(-90~90),缩放等级(1~18),文档：https://guole.fun/posts/41887/');
            throw new Error('标签内经纬度或缩放等级值不正确，请查看文档：https://guole.fun/posts/41887/');
        }
        if (args.length >= 4) {
            if (zoom < 1 || zoom > 18 ) {
                console.error('>>>>>>>openstreetMap标签错误：标签内缩放等级超出范围(1~18)，请查看文档：https://guole.fun/posts/41887/');
                throw new Error('标签内缩放等级超出范围(1~18)，请查看文档：https://guole.fun/posts/41887/');
            } else {}
        } else {}
    let mapid = 'openstreetMap-' + altLan + '-' + altLat;
    let result = '';
    result += css_text;
    result += js_text;
    result += '<div class="map-box" style="margin: 0.8rem 0 1.6rem 0;">';
    result += '<div id="' + mapid + '"' + ' style="max-width:' + mapWidth + '; height:' + mapHeight + ';display: block;margin:0 auto;z-index:1;border-radius: 5px;"></div>';
    result += '</div>';
    result += '<script>';
    result += "var mymap = L.map('" + mapid + "', { attributionControl:false }).setView(['" + altLat + "','" + altLan + "']," + zoom + ");";
    result += "L.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {}).addTo(mymap);";
    result += "var marker = L.marker(['" + altLat + "','" + altLan + "']).addTo(mymap);";
        if (args.length == 2) {
            result += '</script>';
            return result;
        } else {
            result += 'marker.bindPopup("' + alt + '").openPopup();';
            result += '</script>';
            return result;
        }
};
hexo.extend.tag.register('openstreetMap', openstreet);
hexo.extend.tag.register('OpenStreetMap', openstreet);

function baidu(args){
    args = args.join(' ').split(',');
    let mapWidth = '100%';
    let mapHeight = '360px';
    let zoom = 14;
    let alt = '';
    let altLan = 110.073028;
    let altLat = 34.497647;
    if (args.length == 1) {
        alt = '这里是西岳华山，海拔2154.9米！';
    } else if (args.length == 2) {
        altLan = args[0].trim();
        altLat = args[1].trim();
    } else if (args.length == 3) {
        altLan = args[0].trim();
        altLat = args[1].trim();
        alt = args[2].trim();
    } else if (args.length == 4) {
        altLan = args[0].trim();
        altLat = args[1].trim();
        alt = args[2].trim();
        zoom = args[3].trim();
    } else if (args.length == 5) {
        altLan = args[0].trim();
        altLat = args[1].trim();
        alt = args[2].trim();
        zoom = args[3].trim();
        mapWidth = args[4].trim();
    } else if (args.length == 6 || args.length == 7) {
        altLan = args[0].trim();
        altLat = args[1].trim();
        alt = args[2].trim();
        zoom = args[3].trim();
        mapWidth = args[4].trim();
        mapHeight = args[5].trim();
    } else if (args.length > 7 ) {
        console.error('>>>>>>>baiduMap标签错误：标签内参数不正确，请查看文档：https://guole.fun/posts/41887/');
        throw new Error('标签内参数不正确,请查看文档：https://guole.fun/posts/41887/');
    }
        let n = /^(\-|\+)?\d+(\.\d+)?$/; //匹配正负数，包含正负浮点数
        let r = /^\+?[1-9][0-9]*$/; //匹配正整数
        if (n.test(altLan) && n.test(altLat) && altLan <= 180 && altLan >= -180 && altLat <= 90 && altLat >= -90 ) {
            if (r.test(zoom)) {
             } else {
                console.error('>>>>>>>baiduMap标签错误：标签内经纬度或缩放等级值不正确。经度(-180~180),纬度(-90~90),缩放等级(4~18),文档：https://guole.fun/posts/41887/');
                throw new Error('标签内经纬度或缩放等级值不正确，请查看文档：https://guole.fun/posts/41887/');
                }
        } else {
            console.error('>>>>>>>baiduMap标签错误：标签内经纬度或缩放等级值不正确。经度(-180~180),纬度(-90~90),缩放等级(4~18),文档：https://guole.fun/posts/41887/');
            throw new Error('标签内经纬度或缩放等级值不正确，请查看文档：https://guole.fun/posts/41887/');
        }
        if (args.length >= 4) {
            if (zoom < 4 || zoom > 18 ) {
                console.error('>>>>>>>baiduMap标签错误：标签内缩放等级超出范围(4~18)，请查看文档：https://guole.fun/posts/41887/');
                throw new Error('标签内缩放等级超出范围(4~18)，请查看文档：https://guole.fun/posts/41887/');
            } else {}
        } else {}
    let mapid = 'baiduMap-' + altLan + '-' + altLat;
    let result = '';
    result += css_text;
    result += js_text;
    result += proj4;
    result += proj4leaflet;
    result += ChineseTmsProviders;
    result += '<div id="' + mapid + '"' + ' style="max-width:' + mapWidth + '; height:' + mapHeight + ';display: block;margin:0 auto;z-index:1;border-radius: 5px;"></div>';
    result += '<script type="text/javascript">';
    result += "var normalMap=L.tileLayer.chinaProvider('Baidu.Normal.Map',{maxZoom:20,minZoom:4,attribution:'" + baidu_txt + "'}),satelliteMap=L.tileLayer.chinaProvider('Baidu.Satellite.Map',{maxZoom:18,minZoom:1,attribution:'" + baidu_txt + "'}),annotionMap=L.tileLayer.chinaProvider('Baidu.Satellite.Annotion',{maxZoom:18,minZoom:1,attribution:'" + baidu_txt + "'});";
    result += 'var imageMap=L.layerGroup([satelliteMap,annotionMap]);';
    result += 'var baseLayers={"百度地图":normalMap,"百度卫星图":satelliteMap,"百度卫星标注":imageMap};';
    if (args.length == 7) {
        if (args[6].trim() == 2) {
            result += 'var mymap=L.map("' + mapid + '",{crs:L.CRS.Baidu,minZoom:2,maxZoom:20,attributionControl:true,center:[' + altLat + ',' + altLan + '],zoom:' + zoom + ',layers:[satelliteMap],zoomControl:false});';
        } else {
            result += 'var mymap=L.map("' + mapid + '",{crs:L.CRS.Baidu,minZoom:2,maxZoom:20,attributionControl:true,center:[' + altLat + ',' + altLan + '],zoom:' + zoom + ',layers:[normalMap],zoomControl:false});';
        }
    } else {
        result += 'var mymap=L.map("' + mapid + '",{crs:L.CRS.Baidu,minZoom:2,maxZoom:20,attributionControl:true,center:[' + altLat + ',' + altLan + '],zoom:' + zoom + ',layers:[normalMap],zoomControl:false});';
    }
    result += "L.control.layers(baseLayers,overlayLayers).addTo(mymap);L.control.zoom({zoomInTitle:'放大',zoomOutTitle:'缩小'}).addTo(mymap);";
        if (args.length == 2) {
            result += '</script>';
            return result;
        } else {
            result += "var marker = L.marker(['" + altLat + "','" + altLan + "']).addTo(mymap);";
            result += 'marker.bindPopup("' + alt + '").openPopup();';
            result += '</script>';
            return result;
        }
};
hexo.extend.tag.register('baiduMap', baidu);
hexo.extend.tag.register('BaiduMap', baidu);

function geoq(args){
    args = args.join(' ').split(',');
    let mapWidth = '100%';
    let mapHeight = '360px';
    let zoom = 14;
    let alt = '';
    let altLan = 114.058975;
    let altLat = 22.543754;
    if (args.length == 1) {
        alt = '这里是中国深圳！';
    } else if (args.length == 2) {
        altLan = args[0].trim();
        altLat = args[1].trim();
    } else if (args.length == 3) {
        altLan = args[0].trim();
        altLat = args[1].trim();
        alt = args[2].trim();
    } else if (args.length == 4) {
        altLan = args[0].trim();
        altLat = args[1].trim();
        alt = args[2].trim();
        zoom = args[3].trim();
    } else if (args.length == 5) {
        altLan = args[0].trim();
        altLat = args[1].trim();
        alt = args[2].trim();
        zoom = args[3].trim();
        mapWidth = args[4].trim();
    } else if (args.length == 6 || args.length == 7) {
        altLan = args[0].trim();
        altLat = args[1].trim();
        alt = args[2].trim();
        zoom = args[3].trim();
        mapWidth = args[4].trim();
        mapHeight = args[5].trim();
    } else if (args.length > 7 ) {
        console.error('>>>>>>>geoqMap标签错误：标签内参数不正确，请查看文档：https://guole.fun/posts/41887/');
        throw new Error('标签内参数不正确,请查看文档：https://guole.fun/posts/41887/');
    }
        let n = /^(\-|\+)?\d+(\.\d+)?$/; //匹配正负数，包含正负浮点数
        let r = /^\+?[1-9][0-9]*$/; //匹配正整数
        if (n.test(altLan) && n.test(altLat) && altLan <= 180 && altLan >= -180 && altLat <= 90 && altLat >= -90 ) {
            if (r.test(zoom)) {
             } else {
                console.error('>>>>>>>geoqMap标签错误：标签内经纬度或缩放等级值不正确。经度(-180~180),纬度(-90~90),缩放等级(1~18),文档：https://guole.fun/posts/41887/');
                throw new Error('标签内经纬度或缩放等级值不正确，请查看文档：https://guole.fun/posts/41887/');
                }
        } else {
            console.error('>>>>>>>geoqMap标签错误：标签内经纬度或缩放等级值不正确。经度(-180~180),纬度(-90~90),缩放等级(1~18),文档：https://guole.fun/posts/41887/');
            throw new Error('标签内经纬度或缩放等级值不正确，请查看文档：https://guole.fun/posts/41887/');
        }
        if (args.length >= 4) {
            if (zoom < 1 || zoom > 18 ) {
                console.error('>>>>>>>geoqMap标签错误：标签内缩放等级超出范围(1~18)，请查看文档：https://guole.fun/posts/41887/');
                throw new Error('标签内缩放等级超出范围(1~18)，请查看文档：https://guole.fun/posts/41887/');
            } else {}
        } else {}
    let mapid = 'geoqMap-' + altLan + '-' + altLat;
    let result = '';
    result += css_text;
    result += js_text;
    result += ChineseTmsProviders;
    result += '<div id="' + mapid + '"' + ' style="max-width:' + mapWidth + '; height:' + mapHeight + ';display: block;margin:0 auto;z-index:1;border-radius: 5px;"></div>';
    result += '<script type="text/javascript">';
    result += "var normalm1=L.tileLayer.chinaProvider('Geoq.Normal.Map',{maxZoom:20,minZoom:1,attribution:'" + geoq_txt + "'});";
    result += "var normalm2=L.tileLayer.chinaProvider('Geoq.Normal.PurplishBlue',{maxZoom:20,minZoom:1,attribution:'" + geoq_txt + "'});";
    result += "var normalm3=L.tileLayer.chinaProvider('Geoq.Normal.Gray',{maxZoom:20,minZoom:1,attribution:'" + geoq_txt + "'});";
    result += "var normalm4=L.tileLayer.chinaProvider('Geoq.Normal.Warm',{maxZoom:20,minZoom:1,attribution:'" + geoq_txt + "'});";
    result += "var normalm5=L.tileLayer.chinaProvider('Geoq.Theme.Hydro',{maxZoom:20,minZoom:1,attribution:'" + geoq_txt + "'});";
    result += 'var normal=L.layerGroup([normalm1,normalm2,normalm3,normalm4,normalm5]);';
    result += 'var baseLayers={"智图地图":normalm1,"午夜蓝":normalm2,"灰色":normalm3,"暖色":normalm4,"水系":normalm5};';
    if (args.length == 7) {
        if (args[6].trim() == 2) {
            result += 'var mymap=L.map("' + mapid + '",{center:[' + altLat + ',' + altLan + '],zoom:' + zoom + ',layers:[normalm2],zoomControl:false});';
        } else if (args[6].trim() == 3) {
            result += 'var mymap=L.map("' + mapid + '",{center:[' + altLat + ',' + altLan + '],zoom:' + zoom + ',layers:[normalm3],zoomControl:false});';
        } else if (args[6].trim() == 4) {
            result += 'var mymap=L.map("' + mapid + '",{center:[' + altLat + ',' + altLan + '],zoom:' + zoom + ',layers:[normalm4],zoomControl:false});';
        } else if (args[6].trim() == 5) {
            result += 'var mymap=L.map("' + mapid + '",{center:[' + altLat + ',' + altLan + '],zoom:' + zoom + ',layers:[normalm5],zoomControl:false});';
        } else {
            result += 'var mymap=L.map("' + mapid + '",{center:[' + altLat + ',' + altLan + '],zoom:' + zoom + ',layers:[normalm1],zoomControl:false});';
        }
    } else {
        result += 'var mymap=L.map("' + mapid + '",{center:[' + altLat + ',' + altLan + '],zoom:' + zoom + ',layers:[normalm1],zoomControl:false});';
    }
    result += "L.control.layers(baseLayers,null).addTo(mymap);L.control.zoom({zoomInTitle:'放大',zoomOutTitle:'缩小'}).addTo(mymap);";
        if (args.length == 2) {
            result += '</script>';
            return result;
        } else {
            result += "var marker = L.marker(['" + altLat + "','" + altLan + "']).addTo(mymap);";
            result += 'marker.bindPopup("' + alt + '").openPopup();';
            result += '</script>';
            return result;
        }
};
hexo.extend.tag.register('geoqMap', geoq);
hexo.extend.tag.register('GeoqMap', geoq);
hexo.extend.tag.register('GeoQ', geoq);

function google(args){
    args = args.join(' ').split(',');
    let mapWidth = '100%';
    let mapHeight = '360px';
    let zoom = 14;
    let alt = '';
    let altLan = 104.077795;
    let altLat = 30.65555;
    if (args.length == 1) {
        alt = '这里是成都春熙路，超多小姐姐！';
    } else if (args.length == 2) {
        altLan = args[0].trim();
        altLat = args[1].trim();
    } else if (args.length == 3) {
        altLan = args[0].trim();
        altLat = args[1].trim();
        alt = args[2].trim();
    } else if (args.length == 4) {
        altLan = args[0].trim();
        altLat = args[1].trim();
        alt = args[2].trim();
        zoom = args[3].trim();
    } else if (args.length == 5) {
        altLan = args[0].trim();
        altLat = args[1].trim();
        alt = args[2].trim();
        zoom = args[3].trim();
        mapWidth = args[4].trim();
    } else if (args.length == 6 || args.length == 7) {
        altLan = args[0].trim();
        altLat = args[1].trim();
        alt = args[2].trim();
        zoom = args[3].trim();
        mapWidth = args[4].trim();
        mapHeight = args[5].trim();
    } else if (args.length > 7 ) {
        console.error('>>>>>>>googleMap标签错误：标签内参数不正确，请查看文档：https://guole.fun/posts/41887/');
        throw new Error('标签内参数不正确,请查看文档：https://guole.fun/posts/41887/');
    }
        let n = /^(\-|\+)?\d+(\.\d+)?$/; //匹配正负数，包含正负浮点数
        let r = /^\+?[1-9][0-9]*$/; //匹配正整数
        if (n.test(altLan) && n.test(altLat) && altLan <= 180 && altLan >= -180 && altLat <= 90 && altLat >= -90 ) {
            if (r.test(zoom)) {
             } else {
                console.error('>>>>>>>googleMap标签错误：标签内经纬度或缩放等级值不正确。经度(-180~180),纬度(-90~90),缩放等级(1~20),文档：https://guole.fun/posts/41887/');
                throw new Error('标签内经纬度或缩放等级值不正确，请查看文档：https://guole.fun/posts/41887/');
                }
        } else {
            console.error('>>>>>>>googleMap标签错误：标签内经纬度或缩放等级值不正确。经度(-180~180),纬度(-90~90),缩放等级(1~20),文档：https://guole.fun/posts/41887/');
            throw new Error('标签内经纬度或缩放等级值不正确，请查看文档：https://guole.fun/posts/41887/');
        }
        if (args.length >= 4) {
            if (zoom < 1 || zoom > 20 ) {
                console.error('>>>>>>>googleMap标签错误：标签内缩放等级超出范围(1~20)，请查看文档：https://guole.fun/posts/41887/');
                throw new Error('标签内缩放等级超出范围(1~20)，请查看文档：https://guole.fun/posts/41887/');
            } else {}
        } else {}
    let mapid = 'googleMap-' + altLan + '-' + altLat;
    let result = '';
    result += css_text;
    result += js_text;
    result += ChineseTmsProviders;
    result += '<div id="' + mapid + '"' + ' style="max-width:' + mapWidth + '; height:' + mapHeight + ';display: block;margin:0 auto;z-index:1;border-radius: 5px;"></div>';
    result += '<script type="text/javascript">';
    result += "var normalMap=L.tileLayer.chinaProvider('Google.Normal.Map',{maxZoom:22,minZoom:1,attribution:'" + google_txt + "'}),satelliteMap=L.tileLayer.chinaProvider('Google.Satellite.Map',{maxZoom:22,minZoom:1,attribution:'" + google_txt + "'}),routeMap=L.tileLayer.chinaProvider('Google.Satellite.Annotion',{maxZoom:22,minZoom:1,attribution:'" + google_txt + "'});";
    result += 'var baseLayers={"谷歌地图":normalMap,"谷歌卫星图":satelliteMap,"谷歌卫星标注": routeMap};';
    result += 'var overlayLayers={};';
    if (args.length == 7) {
        if (args[6].trim() == 2) {
            result += 'var mymap=L.map("' + mapid + '",{center:[' + altLat + ',' + altLan + '],zoom:' + zoom + ',layers:[satelliteMap],zoomControl:false});';
        } else if (args[6].trim() == 3) {
            result += 'var mymap=L.map("' + mapid + '",{center:[' + altLat + ',' + altLan + '],zoom:' + zoom + ',layers:[routeMap],zoomControl:false});';
        } else {
            result += 'var mymap=L.map("' + mapid + '",{center:[' + altLat + ',' + altLan + '],zoom:' + zoom + ',layers:[normalMap],zoomControl:false});';
        }
    } else {
        result += 'var mymap=L.map("' + mapid + '",{center:[' + altLat + ',' + altLan + '],zoom:' + zoom + ',layers:[normalMap],zoomControl:false});';
    }
    result += "L.control.layers(baseLayers,null).addTo(mymap);L.control.zoom({zoomInTitle:'放大',zoomOutTitle:'缩小'}).addTo(mymap);";
        if (args.length == 2) {
            result += '</script>';
            return result;
        } else {
            result += "var marker = L.marker(['" + altLat + "','" + altLan + "']).addTo(mymap);";
            result += 'marker.bindPopup("' + alt + '").openPopup();';
            result += '</script>';
            return result;
        }
};
hexo.extend.tag.register('googleMap', google);
hexo.extend.tag.register('GoogleMap', google);

```
<!-- folder 用法示例 -->
```swift
{% map 100%, 580px, 5, 113.264385, 23.12911; 110.93, 21.66, "我的快乐老家！";113.26, 23.13, "我永远的广州！" %}
```
{% endfolders %}